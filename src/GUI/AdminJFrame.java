/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DB.StartDB;
import Logic.Autorization;
import Logic.DocsCreation;
import Logic.FillAdminTable;
import Logic.FillDocTable;
import Logic.FillFapTable;
import Logic.FillLpuTable;
import Logic.FillSettingsServiceTable;
import Logic.FillUsersTable;
import Logic.GetPatientData;
import Logic.ReadDoctorsFromExcel;
import TableModel.CrbTableModel;
import TableModel.PatientTableModel;
import TableModel.ServiceSettingsTableModel;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Properties;
import java.util.logging.Level;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

/**
 *
 * @author Равиль
 */

public class AdminJFrame extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    String log4jConfPath = "./src/resources/log4j.properties";
    
    public AdminJFrame() {
        initComponents();
        con = new StartDB();
        doc = new DocsCreation();
        PropertyConfigurator.configure(log4jConfPath);
        Font font = new Font(Font.SANS_SERIF, Font.PLAIN, 14);
        UIManager.put("OptionPane.messageFont", font);
        UIManager.put("OptionPane.buttonFont", font);
        try {
            fis = new FileInputStream("./src/resources/config.properties");
        } catch (FileNotFoundException ex) {
            log.error(ex, ex);
        }
        try {
            property.load(fis);
        } catch (IOException ex) {
            log.error(ex, ex);
        }
    }
    
    private static final Logger log = Logger.getLogger(AdminJFrame.class);
    private FileInputStream fis;
    private Properties property = new Properties();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        dialog1 = new javax.swing.JDialog();
        jPanel4 = new GradientPanel();
        okButton = new javax.swing.JButton();
        lpuList = new javax.swing.JComboBox<>();
        dialog2 = new javax.swing.JDialog();
        jPanel5 = new GradientPanel();
        okButton1 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        DocTable1 = new javax.swing.JTable();
        dialog3 = new javax.swing.JDialog();
        jPanel6 = new GradientPanel();
        okButton2 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        ServiceTable1 = new javax.swing.JTable();
        dialog4 = new javax.swing.JDialog();
        jPanel7 = new GradientPanel();
        okButton3 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        DocTable2 = new javax.swing.JTable();
        loginPanel = new javax.swing.JPanel();
        subLogin = new GradientPanel();
        loginBut = new javax.swing.JButton();
        loginTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        exitBut = new javax.swing.JButton();
        passTxt = new javax.swing.JPasswordField();
        adminPanel = new GradientPanel();
        jPanel3 = new GradientPanel();
        date1 = new com.toedter.calendar.JDateChooser();
        date2 = new com.toedter.calendar.JDateChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        printForm = new javax.swing.JButton();
        outAdmin = new javax.swing.JButton();
        searchBut1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        saveFile = new javax.swing.JButton();
        settingsBut = new javax.swing.JButton();
        settingsPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        ShowFapP = new javax.swing.JButton();
        ShowDocP = new javax.swing.JButton();
        ShowLpuP = new javax.swing.JButton();
        ShowUsersP = new javax.swing.JButton();
        backToMain = new javax.swing.JButton();
        ShowVopP = new javax.swing.JButton();
        ShowDocServ = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        FapPanel = new GradientPanel();
        addFap = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        oldFapCodTxt = new javax.swing.JFormattedTextField();
        newFapCodTxt = new javax.swing.JFormattedTextField();
        fapNameTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        FapTable = new javax.swing.JTable();
        UsersPanel = new GradientPanel();
        addUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        deleteUser = new javax.swing.JButton();
        usernameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        userPassTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        userStatusCB = new javax.swing.JComboBox<>();
        DocPanel = new GradientPanel();
        surnameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        middleTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        v002Txt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        v015Txt = new javax.swing.JTextField();
        snilsTxt = new javax.swing.JFormattedTextField();
        addDoctor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        DocTable = new javax.swing.JTable();
        delDoctor = new javax.swing.JButton();
        addlputodoc = new javax.swing.JButton();
        importDoctorsFromExcel = new javax.swing.JButton();
        saveExcelDocs = new javax.swing.JButton();
        LpuPanel = new GradientPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        MainLpuTable = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        addLPU = new javax.swing.JButton();
        LpuTxt = new javax.swing.JTextField();
        delLpu = new javax.swing.JButton();
        VopPanel = new GradientPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        LpuTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        LpuDocTable = new javax.swing.JTable();
        addDocToLpu = new javax.swing.JButton();
        delDocFromLpu = new javax.swing.JButton();
        DocServPanel = new GradientPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        ServiceTable = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        DocServTable = new javax.swing.JTable();
        addDocToServ = new javax.swing.JButton();
        delDocFromServ = new javax.swing.JButton();
        openServiceSettingsDialog = new javax.swing.JButton();

        dialog1.setName("dialog1"); // NOI18N
        dialog1.setSize(250, 250);
        dialog1.setResizable(false);
        dialog1.setLocationRelativeTo(DocPanel);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Выберите участок", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        okButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/ok24.png"))); // NOI18N
        okButton.setText("Приять ");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        lpuList.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lpuList.setName("lpuList"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lpuList, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lpuList, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(okButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout dialog1Layout = new javax.swing.GroupLayout(dialog1.getContentPane());
        dialog1.getContentPane().setLayout(dialog1Layout);
        dialog1Layout.setHorizontalGroup(
            dialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialog1Layout.setVerticalGroup(
            dialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialog2.setName("dialog2"); // NOI18N
        dialog2.setSize(745, 498);
        dialog2.setResizable(false);
        dialog2.setLocationRelativeTo(DocPanel);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Выберите врача", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        okButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        okButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/ok24.png"))); // NOI18N
        okButton1.setText("Приять ");
        okButton1.setName("okButton1"); // NOI18N
        okButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButton1ActionPerformed(evt);
            }
        });

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        DocTable1.setAutoCreateRowSorter(true);
        DocTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DocTable1.setName("DocTable1"); // NOI18N
        DocTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        DocTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DocTable1MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(DocTable1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(okButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addGap(45, 45, 45)
                .addComponent(okButton1)
                .addGap(66, 66, 66))
        );

        javax.swing.GroupLayout dialog2Layout = new javax.swing.GroupLayout(dialog2.getContentPane());
        dialog2.getContentPane().setLayout(dialog2Layout);
        dialog2Layout.setHorizontalGroup(
            dialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dialog2Layout.setVerticalGroup(
            dialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        dialog3.setName("dialog3"); // NOI18N
        dialog3.setSize(892, 572);
        dialog3.setResizable(false);
        dialog3.setLocationRelativeTo(DocPanel);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Выберите услуги", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N

        okButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        okButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/save24.png"))); // NOI18N
        okButton2.setText("Сохранить");
        okButton2.setName("okButton2"); // NOI18N
        okButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButton2ActionPerformed(evt);
            }
        });

        jScrollPane11.setName("jScrollPane11"); // NOI18N

        ServiceTable1.setAutoCreateRowSorter(true);
        ServiceTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ServiceTable1.setCellSelectionEnabled(true);
        ServiceTable1.setName("ServiceTable1"); // NOI18N
        ServiceTable1.getTableHeader().setReorderingAllowed(false);
        ServiceTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ServiceTable1MouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(ServiceTable1);
        ServiceTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(okButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(okButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout dialog3Layout = new javax.swing.GroupLayout(dialog3.getContentPane());
        dialog3.getContentPane().setLayout(dialog3Layout);
        dialog3Layout.setHorizontalGroup(
            dialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog3Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        dialog3Layout.setVerticalGroup(
            dialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog3Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        dialog4.setName("dialog4"); // NOI18N
        dialog4.setSize(745, 498);
        dialog4.setResizable(false);
        dialog4.setLocationRelativeTo(DocPanel);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Выберите врача", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel7.setName("jPanel7"); // NOI18N

        okButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        okButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/ok24.png"))); // NOI18N
        okButton3.setText("Приять ");
        okButton3.setName("okButton3"); // NOI18N
        okButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButton3ActionPerformed(evt);
            }
        });

        jScrollPane12.setName("jScrollPane12"); // NOI18N

        DocTable2.setAutoCreateRowSorter(true);
        DocTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DocTable2.setName("DocTable2"); // NOI18N
        DocTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        DocTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DocTable2MouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(DocTable2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(okButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addGap(45, 45, 45)
                .addComponent(okButton3)
                .addGap(66, 66, 66))
        );

        javax.swing.GroupLayout dialog4Layout = new javax.swing.GroupLayout(dialog4.getContentPane());
        dialog4.getContentPane().setLayout(dialog4Layout);
        dialog4Layout.setHorizontalGroup(
            dialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog4Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dialog4Layout.setVerticalGroup(
            dialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog4Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        loginPanel.setBackground(new java.awt.Color(153, 255, 255));
        loginPanel.setName("loginPanel"); // NOI18N
        loginPanel.setLayout(new java.awt.GridBagLayout());

        subLogin.setBackground(new java.awt.Color(153, 255, 255));
        subLogin.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Авторизация в систему администрирования", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        subLogin.setName("subLogin"); // NOI18N
        subLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginBut.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        loginBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/login.png"))); // NOI18N
        loginBut.setText("Войти");
        loginBut.setToolTipText("");
        loginBut.setFocusPainted(false);
        loginBut.setIconTextGap(10);
        loginBut.setName("loginBut"); // NOI18N
        loginBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButActionPerformed(evt);
            }
        });
        subLogin.add(loginBut, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 231, 225, 43));

        loginTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loginTxt.setName("loginTxt"); // NOI18N
        loginTxt.setPreferredSize(new java.awt.Dimension(60, 20));
        loginTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginTxtKeyPressed(evt);
            }
        });
        subLogin.add(loginTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 69, 225, 35));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel1.setText("Имя пользователя:");
        jLabel1.setName("jLabel1"); // NOI18N
        subLogin.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 77, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setText("Пароль:");
        jLabel2.setName("jLabel2"); // NOI18N
        subLogin.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 144, -1, -1));

        exitBut.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        exitBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/exit.png"))); // NOI18N
        exitBut.setText("Выход");
        exitBut.setFocusPainted(false);
        exitBut.setIconTextGap(10);
        exitBut.setName("exitBut"); // NOI18N
        exitBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButActionPerformed(evt);
            }
        });
        subLogin.add(exitBut, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 231, 135, 43));

        passTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passTxt.setToolTipText("");
        passTxt.setName("passTxt"); // NOI18N
        passTxt.setPreferredSize(new java.awt.Dimension(60, 20));
        passTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passTxtKeyPressed(evt);
            }
        });
        subLogin.add(passTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 136, 225, 35));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 48;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(127, 201, 161, 187);
        loginPanel.add(subLogin, gridBagConstraints);

        getContentPane().add(loginPanel, "card2");

        adminPanel.setBackground(new java.awt.Color(239, 239, 243));
        adminPanel.setName("adminPanel"); // NOI18N
        adminPanel.setLayout(new java.awt.CardLayout());
        //setPreferredSize(new Dimension(870,740));

        jPanel3.setBackground(new java.awt.Color(239, 239, 243));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Поиск пациента", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        date1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        date1.setName("date1"); // NOI18N

        date2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        date2.setName("date2"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        Table.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "ФИО", "Пол", "Дата рождения", "Дата приема", ""
            }
        ));
        Table.setName("table"); // NOI18N
        Table.setRowHeight(25);
        jScrollPane4.setViewportView(Table);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setMinWidth(50);
            Table.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        printForm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        printForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/print24.png"))); // NOI18N
        printForm.setText("Печать результатов");
        printForm.setName("printForm"); // NOI18N
        printForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printFormActionPerformed(evt);
            }
        });

        outAdmin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        outAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/out24.png"))); // NOI18N
        outAdmin.setText("Выход");
        outAdmin.setName("outAdmin"); // NOI18N
        outAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outAdminActionPerformed(evt);
            }
        });

        searchBut1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        searchBut1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/next32.png"))); // NOI18N
        searchBut1.setMnemonic('E');
        searchBut1.setText("Поиск");
        searchBut1.setBorderPainted(false);
        searchBut1.setFocusPainted(false);
        searchBut1.setName("searchBut1"); // NOI18N
        searchBut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBut1ActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/search.png"))); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Промежуток даты");
        jLabel10.setName("jLabel10"); // NOI18N

        saveFile.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        saveFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/save24.png"))); // NOI18N
        saveFile.setText("Сохранить в файл");
        saveFile.setName("saveFile"); // NOI18N
        saveFile.setOpaque(false);
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });

        settingsBut.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        settingsBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/settings24.png"))); // NOI18N
        settingsBut.setText("Настройки");
        settingsBut.setName("settingsBut"); // NOI18N
        settingsBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(searchBut1))
                            .addComponent(jLabel10))
                        .addContainerGap(459, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(saveFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(printForm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(settingsBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(outAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchBut1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(30, 30, 30)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(printForm, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(settingsBut, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(outAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        adminPanel.add(jPanel3, "card2");

        getContentPane().add(adminPanel, "card2");

        settingsPanel.setName("settingsPanel"); // NOI18N
        settingsPanel.setPreferredSize(new java.awt.Dimension(860, 720));

        jPanel1.setBackground(new java.awt.Color(239, 239, 243));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(860, 720));

        ShowFapP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowFapP.setText("ФАПы");
        ShowFapP.setName("ShowFapP"); // NOI18N
        ShowFapP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowFapPActionPerformed(evt);
            }
        });

        ShowDocP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowDocP.setText("Врачи");
        ShowDocP.setName("ShowDocP"); // NOI18N
        ShowDocP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowDocPActionPerformed(evt);
            }
        });

        ShowLpuP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowLpuP.setText("Участки");
        ShowLpuP.setName("ShowLpuP"); // NOI18N
        ShowLpuP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowLpuPActionPerformed(evt);
            }
        });

        ShowUsersP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowUsersP.setText("Пользователи");
        ShowUsersP.setName("ShowUsersP"); // NOI18N
        ShowUsersP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowUsersPActionPerformed(evt);
            }
        });

        backToMain.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        backToMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/out24.png"))); // NOI18N
        backToMain.setText("Назад");
        backToMain.setName("backToMain"); // NOI18N
        backToMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMainActionPerformed(evt);
            }
        });

        ShowVopP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowVopP.setText("Назначение ВОПов");
        ShowVopP.setName("ShowVopP"); // NOI18N
        ShowVopP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowVopPActionPerformed(evt);
            }
        });

        ShowDocServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowDocServ.setText("Услуга-врач");
        ShowDocServ.setName("ShowDocServ"); // NOI18N
        ShowDocServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowDocServActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShowLpuP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                    .addComponent(ShowFapP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowDocP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowUsersP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backToMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowVopP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                    .addComponent(ShowDocServ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ShowFapP, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ShowLpuP, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ShowDocP, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ShowVopP, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ShowDocServ, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ShowUsersP, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                .addComponent(backToMain, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.CardLayout());

        FapPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ФАПы", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        FapPanel.setName("FapPanel"); // NOI18N

        addFap.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addFap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/ok24.png"))); // NOI18N
        addFap.setText("Добавить ФАП");
        addFap.setName("addFap"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Старый рег.код");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Наименование");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Новый рег.код");
        jLabel7.setName("jLabel7"); // NOI18N

        try {
            oldFapCodTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        oldFapCodTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        oldFapCodTxt.setName("oldFapCodTxt"); // NOI18N

        try {
            newFapCodTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("######.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        newFapCodTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newFapCodTxt.setName("newFapCodTxt"); // NOI18N

        fapNameTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fapNameTxt.setName("fapNameTxt"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        FapTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        FapTable.setName("FapTable"); // NOI18N
        jScrollPane2.setViewportView(FapTable);

        javax.swing.GroupLayout FapPanelLayout = new javax.swing.GroupLayout(FapPanel);
        FapPanel.setLayout(FapPanelLayout);
        FapPanelLayout.setHorizontalGroup(
            FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(FapPanelLayout.createSequentialGroup()
                        .addGroup(FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(oldFapCodTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newFapCodTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FapPanelLayout.createSequentialGroup()
                                .addComponent(fapNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(addFap, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        FapPanelLayout.setVerticalGroup(
            FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FapPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldFapCodTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(24, 24, 24)
                .addGroup(FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(newFapCodTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fapNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addFap, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109))
        );

        jPanel2.add(FapPanel, "card2");

        UsersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Пользователи", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        UsersPanel.setName("UsersPanel"); // NOI18N

        addUser.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/add.png"))); // NOI18N
        addUser.setText("Добавить");
        addUser.setName("addUser"); // NOI18N
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        UserTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "username", "Права доступа"
            }
        ));
        UserTable.setToolTipText("1- Администратор; 2- Врач");
        UserTable.setName("UserTable"); // NOI18N
        UserTable.setRowHeight(20);
        UserTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(UserTable);

        deleteUser.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        deleteUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/del24.png"))); // NOI18N
        deleteUser.setText("Удалить");
        deleteUser.setName("deleteUser"); // NOI18N
        deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserActionPerformed(evt);
            }
        });

        usernameTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        usernameTxt.setName("usernameTxt"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Имя пользователя");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Пароль");
        jLabel15.setName("jLabel15"); // NOI18N

        userPassTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userPassTxt.setName("userPassTxt"); // NOI18N

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Права доступа");
        jLabel17.setName("jLabel17"); // NOI18N

        userStatusCB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        userStatusCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Администатор", "Врач" }));
        userStatusCB.setName("userStatusCB"); // NOI18N

        javax.swing.GroupLayout UsersPanelLayout = new javax.swing.GroupLayout(UsersPanel);
        UsersPanel.setLayout(UsersPanelLayout);
        UsersPanelLayout.setHorizontalGroup(
            UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsersPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UsersPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UsersPanelLayout.createSequentialGroup()
                        .addGroup(UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15))
                        .addGap(45, 45, 45)
                        .addGroup(UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userPassTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(userStatusCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(UsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UsersPanelLayout.createSequentialGroup()
                        .addComponent(addUser, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(265, Short.MAX_VALUE))
        );
        UsersPanelLayout.setVerticalGroup(
            UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userPassTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(userStatusCB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(UsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUser, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        jPanel2.add(UsersPanel, "card5");

        DocPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Врачи", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        DocPanel.setName("DocPanel"); // NOI18N

        surnameTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        surnameTxt.setName("surnameTxt"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Фамилия");
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Имя");
        jLabel8.setName("jLabel8"); // NOI18N

        nameTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameTxt.setName("nameTxt"); // NOI18N

        middleTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        middleTxt.setName("middleTxt"); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Отчество");
        jLabel11.setName("jLabel11"); // NOI18N

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Снилс");
        jLabel12.setName("jLabel12"); // NOI18N

        v002Txt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        v002Txt.setName("v002Txt"); // NOI18N

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Код спец-ти V002");
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel14.setText("Код спец-ти V015");
        jLabel14.setName("jLabel14"); // NOI18N

        v015Txt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        v015Txt.setName("v015Txt"); // NOI18N

        try {
            snilsTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-### ##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        snilsTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        snilsTxt.setName("snilsTxt"); // NOI18N
        snilsTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                snilsTxtKeyReleased(evt);
            }
        });

        addDoctor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addDoctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/ok24.png"))); // NOI18N
        addDoctor.setText("Добавить врача");
        addDoctor.setName("addDoctor"); // NOI18N
        addDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorActionPerformed(evt);
            }
        });

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        DocTable.setAutoCreateRowSorter(true);
        DocTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DocTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ФИО", "СНИЛС", "Код V002", "Код V015", "Участок"
            }
        ));
        DocTable.setName("DocTable"); // NOI18N
        DocTable.setRowHeight(22);
        DocTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(DocTable);
        if (DocTable.getColumnModel().getColumnCount() > 0) {
            DocTable.getColumnModel().getColumn(0).setPreferredWidth(220);
            DocTable.getColumnModel().getColumn(1).setPreferredWidth(120);
        }

        delDoctor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        delDoctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/del24.png"))); // NOI18N
        delDoctor.setText("Удалить врача");
        delDoctor.setName("delDoctor"); // NOI18N
        delDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delDoctorActionPerformed(evt);
            }
        });

        addlputodoc.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addlputodoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/add.png"))); // NOI18N
        addlputodoc.setText("Привязать врача к участку");
        addlputodoc.setName("addlputodoc"); // NOI18N
        addlputodoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addlputodocActionPerformed(evt);
            }
        });

        importDoctorsFromExcel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        importDoctorsFromExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/1467980023_Excel.png"))); // NOI18N
        importDoctorsFromExcel.setText("Загрузить с Excel");
        importDoctorsFromExcel.setName("importDoctorsFromExcel"); // NOI18N
        importDoctorsFromExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importDoctorsFromExcelActionPerformed(evt);
            }
        });

        saveExcelDocs.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        saveExcelDocs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/save24.png"))); // NOI18N
        saveExcelDocs.setText("Сохранить");
        saveExcelDocs.setName("saveExcelDocs"); // NOI18N
        saveExcelDocs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveExcelDocsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DocPanelLayout = new javax.swing.GroupLayout(DocPanel);
        DocPanel.setLayout(DocPanelLayout);
        DocPanelLayout.setHorizontalGroup(
            DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocPanelLayout.createSequentialGroup()
                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DocPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DocPanelLayout.createSequentialGroup()
                                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(DocPanelLayout.createSequentialGroup()
                                        .addComponent(middleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(saveExcelDocs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(DocPanelLayout.createSequentialGroup()
                                        .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(surnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(importDoctorsFromExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(DocPanelLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(snilsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DocPanelLayout.createSequentialGroup()
                                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addGap(23, 23, 23)
                                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(v015Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(v002Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)))
                    .addGroup(DocPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addDoctor)
                        .addGap(18, 18, 18)
                        .addComponent(delDoctor)
                        .addGap(18, 18, 18)
                        .addComponent(addlputodoc)))
                .addContainerGap())
        );
        DocPanelLayout.setVerticalGroup(
            DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DocPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel5)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel8)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel11))
                    .addGroup(DocPanelLayout.createSequentialGroup()
                        .addComponent(surnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(middleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DocPanelLayout.createSequentialGroup()
                        .addComponent(importDoctorsFromExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveExcelDocs, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DocPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel12))
                    .addGroup(DocPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(snilsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DocPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel13))
                    .addComponent(v002Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(v015Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addlputodoc, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 47, Short.MAX_VALUE))
        );

        jPanel2.add(DocPanel, "card3");

        LpuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Участки", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        LpuPanel.setName("LpuPanel"); // NOI18N

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        MainLpuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Участок"
            }
        ));
        MainLpuTable.setName("MainLpuTable"); // NOI18N
        jScrollPane7.setViewportView(MainLpuTable);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Наименование участка");
        jLabel16.setName("jLabel16"); // NOI18N

        addLPU.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addLPU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/ok24.png"))); // NOI18N
        addLPU.setText("Добавить участок");
        addLPU.setName("addLPU"); // NOI18N
        addLPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLPUActionPerformed(evt);
            }
        });

        LpuTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LpuTxt.setName("LpuTxt"); // NOI18N

        delLpu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        delLpu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/del24.png"))); // NOI18N
        delLpu.setText("Удалить участок");
        delLpu.setName("delLpu"); // NOI18N
        delLpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delLpuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LpuPanelLayout = new javax.swing.GroupLayout(LpuPanel);
        LpuPanel.setLayout(LpuPanelLayout);
        LpuPanelLayout.setHorizontalGroup(
            LpuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LpuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LpuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                    .addGroup(LpuPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addGroup(LpuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addLPU, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(LpuTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delLpu)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        LpuPanelLayout.setVerticalGroup(
            LpuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LpuPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LpuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LpuTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(LpuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(delLpu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addLPU, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addGap(177, 177, 177))
        );

        jPanel2.add(LpuPanel, "card4");

        VopPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Назначение ВОПов участкам", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        VopPanel.setName("VopPanel"); // NOI18N

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        LpuTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LpuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Участок"
            }
        ));
        LpuTable.setName("LpuTable"); // NOI18N
        LpuTable.setRowHeight(22);
        LpuTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        LpuTable.getTableHeader().setReorderingAllowed(false);
        LpuTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LpuTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(LpuTable);

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        LpuDocTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LpuDocTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ФИО врача"
            }
        ));
        LpuDocTable.setName("LpuDocTable"); // NOI18N
        LpuDocTable.setRowHeight(22);
        jScrollPane6.setViewportView(LpuDocTable);

        addDocToLpu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addDocToLpu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/add.png"))); // NOI18N
        addDocToLpu.setText("Привязать врача к участку");
        addDocToLpu.setName("addDocToLpu"); // NOI18N
        addDocToLpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDocToLpuActionPerformed(evt);
            }
        });

        delDocFromLpu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        delDocFromLpu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/del24.png"))); // NOI18N
        delDocFromLpu.setText("Отвязать врача от участка");
        delDocFromLpu.setName("delDocFromLpu"); // NOI18N
        delDocFromLpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delDocFromLpuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VopPanelLayout = new javax.swing.GroupLayout(VopPanel);
        VopPanel.setLayout(VopPanelLayout);
        VopPanelLayout.setHorizontalGroup(
            VopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VopPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE))
                    .addGroup(VopPanelLayout.createSequentialGroup()
                        .addComponent(addDocToLpu)
                        .addGap(35, 35, 35)
                        .addComponent(delDocFromLpu, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        VopPanelLayout.setVerticalGroup(
            VopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(VopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDocToLpu, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delDocFromLpu, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(175, Short.MAX_VALUE))
        );

        jPanel2.add(VopPanel, "card6");

        DocServPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Назначение врачей услугам", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        DocServPanel.setName("DocServPanel"); // NOI18N

        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane9.setName("jScrollPane9"); // NOI18N

        ServiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ServiceTable.setName("ServiceTable"); // NOI18N
        ServiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ServiceTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ServiceTable.getTableHeader().setReorderingAllowed(false);
        ServiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ServiceTableMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(ServiceTable);
        if (ServiceTable.getColumnModel().getColumnCount() > 0) {
            ServiceTable.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            ServiceTable.getColumnModel().getColumn(1).setHeaderValue("Title 2");
        }

        jScrollPane10.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane10.setName("jScrollPane10"); // NOI18N

        DocServTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        DocServTable.setName("DocServTable"); // NOI18N
        DocServTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        //DocServTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        DocServTable.setRowHeight(22);
        DocServTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane10.setViewportView(DocServTable);

        addDocToServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addDocToServ.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/add.png"))); // NOI18N
        addDocToServ.setText("Добавить врача к услуге");
        addDocToServ.setName("addDocToServ"); // NOI18N
        addDocToServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDocToServActionPerformed(evt);
            }
        });

        delDocFromServ.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        delDocFromServ.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/del24.png"))); // NOI18N
        delDocFromServ.setText("Отвзяать врача от услуги");
        delDocFromServ.setName("delDocFromServ"); // NOI18N
        delDocFromServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delDocFromServActionPerformed(evt);
            }
        });

        openServiceSettingsDialog.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        openServiceSettingsDialog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/list32.png"))); // NOI18N
        openServiceSettingsDialog.setText("Выбрать услуги");
        openServiceSettingsDialog.setToolTipText("Необходимо для назначения врачей услугам.");
        openServiceSettingsDialog.setName("openServiceSettingsDialog"); // NOI18N
        openServiceSettingsDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openServiceSettingsDialogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DocServPanelLayout = new javax.swing.GroupLayout(DocServPanel);
        DocServPanel.setLayout(DocServPanelLayout);
        DocServPanelLayout.setHorizontalGroup(
            DocServPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocServPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGroup(DocServPanelLayout.createSequentialGroup()
                .addGroup(DocServPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DocServPanelLayout.createSequentialGroup()
                        .addComponent(addDocToServ, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delDocFromServ, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DocServPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(openServiceSettingsDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        DocServPanelLayout.setVerticalGroup(
            DocServPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocServPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openServiceSettingsDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DocServPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(DocServPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDocToServ, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delDocFromServ, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(176, Short.MAX_VALUE))
        );

        jPanel2.add(DocServPanel, "card7");

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        getContentPane().add(settingsPanel, "card4");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void login(){
        //<editor-fold defaultstate="collapsed" desc="Авторизация в программу">
        con.Start();
        Autorization login = new Autorization();
        char [] p = passTxt.getPassword();
        String pass = String.valueOf(p);      
        String username = loginTxt.getText();     
            if(login.login(username, pass,con.getConnection()) == true){               
                System.out.println(login.getStatus());
                System.out.println(login.getCrbCode());
                log.info("Вход осуществлен под " + username); 
                if(login.getStatus() == 0){
                   SuperAdminFrame sadmin = new SuperAdminFrame();
                   sadmin.setVisible(true);
                   this.setVisible(false);
                   return; 
                }
                if(login.getStatus() == 1){
                    adminPanel.setVisible(true);
                    loginPanel.setVisible(false);
                    passTxt.setText("");
                    loginTxt.setText("");
                    settingsBut.setEnabled(true);
                    crbCode = login.getCrbCode();
                    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Поиск пациента в "+ login.getCrbName(con.getConnection(), crbCode), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18)));
                    return;
                }
                if(login.getStatus() == 2){
                    adminPanel.setVisible(true);
                    loginPanel.setVisible(false);
                    passTxt.setText("");
                    loginTxt.setText("");
                    settingsBut.setEnabled(false);
                    crbCode = login.getCrbCode();
                    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Поиск пациента в "+ login.getCrbName(con.getConnection(), crbCode), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18)));
                    return;
                }
                
            }else JOptionPane.showMessageDialog(null, "Ошибка при вводе логина или пароля");
                log.info("Ошибка при вводе пароля");
                loginTxt.requestFocus();
                
//</editor-fold>      
    }
    
    
    private void outAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outAdminActionPerformed
        adminPanel.setVisible(false);
        con.Stop();
        loginPanel.setVisible(true);
    }//GEN-LAST:event_outAdminActionPerformed

    private void searchBut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBut1ActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String d1;
        String d2;
        String s1 = ((JTextField)date1.getDateEditor().getUiComponent()).getText();
        String s2 = ((JTextField)date1.getDateEditor().getUiComponent()).getText();
        if (s1.equals("") && s2.equals("")) {
           // JOptionPane.showMessageDialog(null, "Please type birthday", "Warning!", JOptionPane.ERROR_MESSAGE);
            d1 = "null";
            d2 = "null";            
        }else{
            d1 = sdf.format(date1.getDate());
            d2 = sdf.format(date2.getDate());   
        }
        PatientTableModel tm = new PatientTableModel(false, con.getConnection());          
        try {
            
            tm.setDataSource(adminTable.FillTable(con.getConnection(),d1,d2));
            
            Table.setModel(tm); 
        } catch (Exception ex) {
            log.error(ex, ex);
        }
       TableModify();      
    }//GEN-LAST:event_searchBut1ActionPerformed
    
    private void TableModify(){

//         Table.getColumnModel().getColumn(5).setCellEditor(Table.getDefaultEditor(Boolean.class)); 
//         Table.getColumnModel().getColumn(5).setCellRenderer(Table.getDefaultRenderer(Boolean.class));
//         int l = Table.getRowCount();
//         for (int i = 0; i < l; i++) {
//            Table.getModel().setValueAt(true, i, 5);
//        }
        Table.getTableHeader().setFont(new java.awt.Font("Arial", 0, 14));
        Table.setFont(new java.awt.Font("Arial", 0, 14));
        Table.setRowHeight(25);
        Table.getColumnModel().getColumn(0).setMaxWidth(70);
        Table.getColumnModel().getColumn(1).setPreferredWidth(160);
        Table.getColumnModel().getColumn(1).setMaxWidth(250);
        Table.getColumnModel().getColumn(3).setWidth(140);
        Table.getColumnModel().getColumn(3).setPreferredWidth(140);
        Table.getColumnModel().getColumn(3).setMaxWidth(140);
        Table.getColumnModel().getColumn(2).setMaxWidth(50);
       // Table.getColumnModel().getColumn(5).setPreferredWidth(30);
       // Table.getColumnModel().getColumn(5).setMaxWidth(30);
    }
    
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Object[] options = {"Да",
                    "Нет!"};
        int n = JOptionPane.showOptionDialog( this,
        "Заершить работу программы?",
        "Выход",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[0]);
        if (n == 0 ){
            try {
                con.Stop(); 
            } catch (NullPointerException e){
            log.error(e, e);
            System.out.println(e);
             }
            System.exit(0);
        }
        if (n == 1 ){
            return;
        }
        
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       try {
           con.Stop(); 
        } catch (NullPointerException e){
            log.error(e, e);
             }
    }//GEN-LAST:event_formWindowClosed

    private void loginButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButActionPerformed
        login();
    }//GEN-LAST:event_loginButActionPerformed

    private void loginTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginTxtKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            passTxt.requestFocus();
        }
    }//GEN-LAST:event_loginTxtKeyPressed

    private void exitButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButActionPerformed
        try {
            con.Stop();
        } catch (NullPointerException e){
        }
        System.exit(0);
    }//GEN-LAST:event_exitButActionPerformed

    private void passTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passTxtKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            login();
        }
    }//GEN-LAST:event_passTxtKeyPressed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
        try {
            doc.createPdfDoc(Table,data,con); 
        } catch (Exception e) {
        }
            
    }//GEN-LAST:event_saveFileActionPerformed
    
    private void printFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printFormActionPerformed
       // createPrintDoc();
        try {
           doc.createPrintPdfDoc(Table,data,con); 
        } catch (Exception e) {
            
        }
       
    }//GEN-LAST:event_printFormActionPerformed

    private void settingsButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButActionPerformed
        settingsPanel.setVisible(true);
        adminPanel.setVisible(false);  
        UpdateFapTable();
    }//GEN-LAST:event_settingsButActionPerformed

    
    
    private void ShowFapPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowFapPActionPerformed
        FapPanel.setVisible(true);
        DocPanel.setVisible(false);
        LpuPanel.setVisible(false);
        UsersPanel.setVisible(false);
        VopPanel.setVisible(false);
        DocServPanel.setVisible(false);
        UpdateFapTable();
    }//GEN-LAST:event_ShowFapPActionPerformed
    
    private void UpdateFapTable(){
        FillFapTable fapTable = new FillFapTable();
        String crb = crbCode.split("\\.")[0];
        CrbTableModel tm = new CrbTableModel(false, con.getConnection());          
        try {           
            tm.setDataSource(fapTable.FillFapTable(con.getConnection(),crb));           
            FapTable.setModel(tm); 
        } catch (Exception ex) {
            log.error(ex, ex);
        }
         FapTableModify();
    }
    private void FapTableModify(){
        FapTable.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        FapTable.setFont(new java.awt.Font("Arial", 0, 14));
        FapTable.setRowHeight(22);
        FapTable.getColumnModel().getColumn(0).setHeaderValue("Старый рег. код");
        FapTable.getColumnModel().getColumn(1).setHeaderValue("Наименование");
        FapTable.getColumnModel().getColumn(2).setHeaderValue("Новый рег. код");
        FapTable.getColumnModel().getColumn(0).setPreferredWidth(110);
        FapTable.getColumnModel().getColumn(0).setMaxWidth(110);
        FapTable.getColumnModel().getColumn(1).setPreferredWidth(220);
        FapTable.getColumnModel().getColumn(1).setWidth(220);
        FapTable.getColumnModel().getColumn(2).setPreferredWidth(110);
        FapTable.getColumnModel().getColumn(2).setMaxWidth(110);
    }
            
    private void ShowDocPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowDocPActionPerformed
        FapPanel.setVisible(false);
        DocPanel.setVisible(true);
        LpuPanel.setVisible(false);
        UsersPanel.setVisible(false);
        VopPanel.setVisible(false);
        DocServPanel.setVisible(false);
        saveExcelDocs.setEnabled(false);
        UpdateDoctorTable(DocTable);
    }//GEN-LAST:event_ShowDocPActionPerformed
    
    public void UpdateDoctorTable(JTable table){
        String crb = crbCode.split("\\.")[0];
        CrbTableModel tm = new CrbTableModel(false, con.getConnection());          
        try {           
            tm.setDataSource(doctor.FillDoctorTable(con.getConnection(), crb));           
            table.setModel(tm); 
        } catch (Exception ex) {
            log.error(ex, ex);
        }
         DocTableModify(table); 
    }
    
    private void DocTableModify(JTable table){
        table.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        table.setFont(new java.awt.Font("Arial", 0, 14));
        table.setRowHeight(22);
        table.getColumnModel().getColumn(0).setHeaderValue("ФИО");
        table.getColumnModel().getColumn(1).setHeaderValue("СНИЛС");
        table.getColumnModel().getColumn(2).setHeaderValue("V002");
        table.getColumnModel().getColumn(3).setHeaderValue("V015");
        table.getColumnModel().getColumn(4).setHeaderValue("Участок");
        table.getColumnModel().getColumn(0).setPreferredWidth(170);
        table.getColumnModel().getColumn(0).setMaxWidth(300);
        table.getColumnModel().getColumn(1).setPreferredWidth(110);
        table.getColumnModel().getColumn(1).setWidth(110);
    }
    
    private void ShowLpuPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowLpuPActionPerformed
        FapPanel.setVisible(false);
        DocPanel.setVisible(false);
        UsersPanel.setVisible(false);
        LpuPanel.setVisible(true);
        VopPanel.setVisible(false);
        DocServPanel.setVisible(false);
        ShowLpuTable(MainLpuTable);
    }//GEN-LAST:event_ShowLpuPActionPerformed
    
    public void ShowLpuTable(JTable table){
        String crb = crbCode.split("\\.")[0];
        CrbTableModel tm = new CrbTableModel(false, con.getConnection());          
        try {           
            tm.setDataSource(lpu.FillLpuTable(con.getConnection(), crb));           
            table.setModel(tm); 
        } catch (Exception ex) {
            log.error(ex, ex);
        }
         LpuTableModify(table); 
    }
    private void LpuTableModify(JTable table){
        table.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        table.setFont(new java.awt.Font("Arial", 0, 14));
        table.setRowHeight(22);
        table.getColumnModel().getColumn(0).setHeaderValue("Участок");
    }
    
    private void ShowUsersPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowUsersPActionPerformed
        UsersPanel.setVisible(true);
        FapPanel.setVisible(false);
        DocPanel.setVisible(false);
        LpuPanel.setVisible(false);
        VopPanel.setVisible(false);
        DocServPanel.setVisible(false);
        UserTableShow();
    }//GEN-LAST:event_ShowUsersPActionPerformed
    
    public void UserTableShow(){
       CrbTableModel tm = new CrbTableModel(false, con.getConnection());          
        try { 
            System.out.println(crbCode);
            tm.setDataSource(userT.FillUsersTable(con.getConnection(),crbCode));           
            UserTable.setModel(tm); 
        } catch (Exception ex) {
            log.error(ex, ex);
        } 
        UserTable.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        UserTable.setFont(new java.awt.Font("Arial", 0, 14));
        UserTable.setRowHeight(22);
        UserTable.getColumnModel().getColumn(0).setHeaderValue("ID");
        UserTable.getColumnModel().getColumn(1).setHeaderValue("Имя пользователя");
        
        UserTable.getColumnModel().getColumn(2).setHeaderValue("Права доступа");
        UserTable.getColumnModel().getColumn(0).setPreferredWidth(80);
        UserTable.getColumnModel().getColumn(1).setPreferredWidth(200);   
        for (int i = 0; i < UserTable.getRowCount(); i++) {
            if(UserTable.getValueAt(i,2).toString().contains("1")){
                
                UserTable.setValueAt("Администратор",i,2);
            }
            if(UserTable.getValueAt(i,2).toString().contains("2")){
                
                UserTable.setValueAt("Врач",i,2);
            }
        }
    }
    
    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        String username = usernameTxt.getText();
        String password = userPassTxt.getText();
        int status = userStatusCB.getSelectedIndex();
        if(username.equals("")){
            JOptionPane.showMessageDialog(null, "Необходимо ввести имя пользователя.");
            return ;
        }
        if(password.equals("")){
            JOptionPane.showMessageDialog(null, "Необходимо ввести пароль.");
            return ;
        }
        status += 1;
            if(userT.getUsername(con.getConnection(), username) == 0){
               JOptionPane.showMessageDialog(null, "Добавляемый пользователь имеется в системе.");
               return;           
        }
        userT.InsertUser(con.getConnection(), username, password, crbCode, String.valueOf(status));        
        UserTableShow();
    }//GEN-LAST:event_addUserActionPerformed

    private void addDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorActionPerformed
        String crb = crbCode.split("\\.")[0];
        CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
        try {
            if(surnameTxt.getText().trim().length() == 0 || nameTxt.getText().trim().length() == 0 || snilsTxt.getText().trim().length() == 0
                   || v002Txt.getText().trim().length() == 0|| v015Txt.getText().trim().length() == 0){
                JOptionPane.showMessageDialog(null, "Заполните все поля данных.");
                return;
            }
            String surname = surnameTxt.getText();
            String name = nameTxt.getText();
            String middle = middleTxt.getText();
            String fullName = surname + " " + name + " " + middle;
            String snils = snilsTxt.getText();
            String v002 = v002Txt.getText();
            String v015 = v015Txt.getText();
                
            try {
                doctor.AddNewDoctor(con.getConnection(), fullName, snils, v002, v015, crb);
                tm.setDataSource(doctor.FillDoctorTable(con.getConnection(), crb));           
                DocTable.setModel(tm); 
            } catch (Exception ex) {
                log.error(ex, ex);
            }
         DocTableModify(DocTable); 
         surnameTxt.setText("");
         nameTxt.setText("");
         middleTxt.setText("");
         snilsTxt.setText("");
         v002Txt.setText("");
         v015Txt.setText("");
         
         } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Необходимо заполнить все поля.");
        }
    }//GEN-LAST:event_addDoctorActionPerformed

    private void snilsTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_snilsTxtKeyReleased
        String snils = snilsTxt.getText();
            snils = snils.replaceAll("-", "");
            snils = snils.replaceAll(" ", "");
        if(snils.length() == 11){
            if(CheckSnils(snils)){                
            }else{                
                JOptionPane.showMessageDialog(null, 
                        "Ошибка при вводе номера СНИЛС! Проверьте корректность вводимых данных.");
            }
    }
    }//GEN-LAST:event_snilsTxtKeyReleased

    private void backToMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMainActionPerformed
       settingsPanel.setVisible(false);
       adminPanel.setVisible(true);
    }//GEN-LAST:event_backToMainActionPerformed

    private void ShowVopPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowVopPActionPerformed
        VopPanel.setVisible(true);
        UsersPanel.setVisible(false);
        FapPanel.setVisible(false);
        DocPanel.setVisible(false);
        LpuPanel.setVisible(false);
        DocServPanel.setVisible(false);
        ShowLpuTable(LpuTable);
    }//GEN-LAST:event_ShowVopPActionPerformed
    
    private void ShowDocServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowDocServActionPerformed
        
            DocServPanel.setVisible(true);
            VopPanel.setVisible(false);
            UsersPanel.setVisible(false);
            FapPanel.setVisible(false);
            DocPanel.setVisible(false);
            LpuPanel.setVisible(false);
            try {
              
              String crb = crbCode.split("\\.")[0];
              ServiceSettingsTableModel tm = new ServiceSettingsTableModel(true);
                try {
                  tm.setDataSource(service.FillServiceTable(con.getConnection(), crb));
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            ServiceTable.setModel(tm);
            ServiceTableModify();  
            } catch (Exception e) {
            }
            
    }//GEN-LAST:event_ShowDocServActionPerformed

    private void ServiceTableModify(){
        //<editor-fold defaultstate="collapsed" desc="Модификация таблицы с услугами в панели УСЛУГА-ВРАЧ">
        ServiceTable.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        ServiceTable.setFont(new java.awt.Font("Arial", 0, 14));
        ServiceTable.setRowHeight(22);
        ServiceTable.getColumnModel().getColumn(0).setHeaderValue("Код");
        ServiceTable.getColumnModel().getColumn(1).setHeaderValue("Наименование");
        ServiceTable.getColumnModel().getColumn(0).setPreferredWidth(110);
        ServiceTable.getColumnModel().getColumn(1).setPreferredWidth(380);
        ServiceTable.getColumnModel().getColumn(0).setMaxWidth(110);
//</editor-fold>        
    }
    
    private void addLPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLPUActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Добавление нового участка к ЦРБ ">
                
        String crb = crbCode.split("\\.")[0];
        CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
        String value = LpuTxt.getText();
        int length = MainLpuTable.getRowCount();
        for (int i = 0; i < length; i++) {
            String rowData = MainLpuTable.getValueAt(i, 0).toString();
            if(value.equals(rowData)){
                JOptionPane.showMessageDialog(null, "Добавляемый участок уже присутствует в базе.");
                LpuTxt.setText("");
                return;
            }
        }    
            try {
                lpu.AddNewLpu(con.getConnection(), value, crb);
                tm.setDataSource(lpu.FillLpuTable(con.getConnection(), crb));           
                MainLpuTable.setModel(tm); 
            } catch (Exception ex) {
                log.error(ex, ex);
            }
         LpuTableModify(MainLpuTable); 
         LpuTxt.setText("");
     
//</editor-fold>    
    }//GEN-LAST:event_addLPUActionPerformed

    private void delLpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delLpuActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Удаление участка с ЦРБ">
                int row  = -1;
        row   = MainLpuTable.getSelectedRow();       
        if( row != -1){
        
        String crb = crbCode.split("\\.")[0];
            String value = MainLpuTable.getValueAt(row,0).toString();
            lpu.DeleteLpu(con.getConnection(), value,crb);
            CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(lpu.FillLpuTable(con.getConnection(), crb));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                MainLpuTable.setModel(tm);
                LpuTableModify(MainLpuTable);
        }else{
           JOptionPane.showMessageDialog(null, "Выберите из таблицы участок для удаления"); 
        }      
//</editor-fold>
    }//GEN-LAST:event_delLpuActionPerformed

    private void delDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delDoctorActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Удаление врача из ЦРБ ">
                int row  = -1;
        row   = DocTable.getSelectedRow();       
        if( row != -1){
        
            String crb = crbCode.split("\\.")[0];
            String value = DocTable.getValueAt(row,1).toString();
            doctor.DeleteDoctor(con.getConnection(), value, crb);
            CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillDoctorTable(con.getConnection(), crb));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                DocTable.setModel(tm);
                DocTableModify(DocTable);
        }else{
           JOptionPane.showMessageDialog(null, "Выберите из таблицы врача для удаления"); 
        }  
//</editor-fold>
    }//GEN-LAST:event_delDoctorActionPerformed

    private void LpuTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LpuTableMouseClicked
        UpdateLpuDocTable();
        int length = LpuDocTable.getRowCount();           
            if(length != 0 ){
                addDocToLpu.setEnabled(false);    
                delDocFromLpu.setEnabled(true);
            }else{
                addDocToLpu.setEnabled(true);
                delDocFromLpu.setEnabled(false);
            }
    }//GEN-LAST:event_LpuTableMouseClicked

    private void addlputodocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addlputodocActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Вызов диалога для добавления учатка к врачу с панели ВРАЧИ">
        int row = DocTable.getSelectedRow();
        if( row != -1){
            dialog1.setVisible(true);
            
            String crb = crbCode.split("\\.")[0];
            lpu.GetLpuList(con.getConnection(), crb);
            int l = lpu.getLpuArr().size();
            lpuList.removeAllItems();
            for (int i = 0; i < l; i++) {
                lpuList.addItem(lpu.getLpuArr().get(i));
            }         
        }else{
            JOptionPane.showMessageDialog(null, "Выберите из таблицы врача для редактирования."); 
        }
//</editor-fold>      
    }//GEN-LAST:event_addlputodocActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Добавление участка к врачу в панели ВРАЧ">
            int row = DocTable.getSelectedRow();
            String snils = DocTable.getValueAt(row, 1).toString();    
            
            String crb = crbCode.split("\\.")[0];
            String curLpuId = "";
            Object  value = DocTable.getValueAt(row, 4);
            if(value != null){
                curLpuId = value.toString();
            }
            String lpuID = lpuList.getSelectedItem().toString();             
            String v002= DocTable.getValueAt(row,2).toString();
            String v015= DocTable.getValueAt(row,3).toString();
            String docName = DocTable.getValueAt(row,0).toString();
            if(curLpuId.contains(lpuID)){
                JOptionPane.showMessageDialog(null, "Выбранный участок уже присутствует у данного врача.");
                return;
            }
            doctor.ChangeDoctorLpu(con.getConnection(), lpuID, snils, crb);
            int situation = 0;
            String newLpu = doctor.getDocLpu(con.getConnection(), snils, docName, crb, v002, v015);
            System.out.println(newLpu);
            if(newLpu.contains(",,")){
                situation = 1;
            }
            String str[] = newLpu.split("");
            
            int size = str.length;
            
            if(str[0].equals(",")){
                situation = 2;
            }
            if(str[size-1].equals(",")){
                situation = 3;
            }
            if(situation != 0){
                
                doctor.CleanCommaFromLpuString(con.getConnection(), situation, snils, crb, docName, v002, v015);
            }
            CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillDoctorTable(con.getConnection(), crb));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                DocTable.setModel(tm);
                DocTableModify(DocTable);
                dialog1.setVisible(false);
//</editor-fold>      
    }//GEN-LAST:event_okButtonActionPerformed

    private void okButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButton1ActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Добавление врача к учатску в панели УЧАСТКИ">
        int row = LpuTable.getSelectedRow();
        String lpuID = LpuTable.getValueAt(row,0).toString();
        int row1 = DocTable1.getSelectedRow();
        if(row1 != -1){
           
           
           String crb = crbCode.split("\\.")[0];
           String snils = DocTable1.getValueAt(row1, 1).toString();
           
           doctor.ChangeDoctorLpu(con.getConnection(), lpuID, snils, crb);
           dialog2.setVisible(false);
            
           UpdateLpuDocTable();
        }
        else{
            JOptionPane.showMessageDialog(null, "Выберите врача из таблицы."); 
        }
//</editor-fold>
    }//GEN-LAST:event_okButton1ActionPerformed

    private void addDocToLpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDocToLpuActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Вызов диалога для добавления врача к участку с панели УЧАСТКИ">
        int row = LpuTable.getSelectedRow();
        if(row != -1){                
            
            String crb = crbCode.split("\\.")[0]; 
            dialog2.setVisible(true);
            CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillDoctorTable(con.getConnection(), crb));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                DocTable1.setModel(tm);
                DocTableModify(DocTable1);     
        }else{
            JOptionPane.showMessageDialog(null, "Выберите участок из таблицы."); 
        }
//</editor-fold>       
    }//GEN-LAST:event_addDocToLpuActionPerformed

    private void delDocFromLpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delDocFromLpuActionPerformed
        DelDocFromLPU();
        UpdateLpuDocTable();
    }//GEN-LAST:event_delDocFromLpuActionPerformed

    private void DocTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DocTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DocTable1MouseClicked
    
    private void ServiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ServiceTableMouseClicked
        int row = ServiceTable.getSelectedRow();
        if(row != -1){
            
            String crb = crbCode.split("\\.")[0];
            String servCode = ServiceTable.getValueAt(row,0).toString();
            CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillServDocTable(con.getConnection(), crb, servCode));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                DocServTable.setModel(tm);
                LpuDocTableModify(DocServTable);   
        }else{
            JOptionPane.showMessageDialog(null, "Выберите услугу из таблицы"); 
        }
            int length = DocServTable.getRowCount();
            
            if(length != 0 ){
                  
                delDocFromServ.setEnabled(true);
            }else{
                    
                delDocFromServ.setEnabled(false);
            }        
    }//GEN-LAST:event_ServiceTableMouseClicked

    private void okButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButton2ActionPerformed
       int length = ServiceTable1.getRowCount();
       
       String crb = crbCode.split("\\.")[0];
        for (int i = 0; i < length; i++) {
            Object value = ServiceTable1.getValueAt(i, 2);
            if(value != null && value.toString().equals("true")){
                String servCode = ServiceTable1.getModel().getValueAt(i, 0).toString();
                service.insertVopOrSpecToDocServ(con.getConnection(), crb, servCode, 1);
            }
        }
        for (int i = 0; i < length; i++) {
            Object value = ServiceTable1.getValueAt(i, 3);
            if(value != null && value.toString().equals("true")){
                String servCode = ServiceTable1.getModel().getValueAt(i, 0).toString();
                service.insertVopOrSpecToDocServ(con.getConnection(), crb, servCode, 2);
            }
        }
        for (int i = 0; i < length; i++) {
            Object value = ServiceTable1.getValueAt(i, 2);
            if(value != null && value.toString().equals("false")){
                String servCode = ServiceTable1.getModel().getValueAt(i, 0).toString();
                service.insertVopOrSpecToDocServ(con.getConnection(), crb, servCode, 3);
            }
        }
        for (int i = 0; i < length; i++) {
            Object value = ServiceTable1.getValueAt(i, 3);
            if(value != null && value.toString().equals("false")){
                String servCode = ServiceTable1.getModel().getValueAt(i, 0).toString();
                service.insertVopOrSpecToDocServ(con.getConnection(), crb, servCode, 4);
            }
        }
        ServiceSettingsTableModel tm = new ServiceSettingsTableModel(true);
        try {
          tm.setDataSource(service.FillServiceTable(con.getConnection(), crb));
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
            ServiceTable.setModel(tm);
            ServiceTableModify();
            dialog3.setVisible(false);
       
    }//GEN-LAST:event_okButton2ActionPerformed

    private void ServiceTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ServiceTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ServiceTable1MouseClicked

    private void openServiceSettingsDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openServiceSettingsDialogActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Открыть диалог с выбором ВОПов и СПЕЦов для услуг">
        
        String crb = crbCode.split("\\.")[0];
        try{
        dialog3.setVisible(true);        
            ServiceSettingsTableModel tm = new ServiceSettingsTableModel(true);
            tm.setDataSource(service.FillServiceSettingsTable(con.getConnection(), crb));
            ServiceTable1.setModel(tm);
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        ServiceSettingsTableModify();
        ServiceTable1.requestFocus();
        service.getVopOrSpecStatus(con.getConnection(), crb, 1);
        int length = ServiceTable1.getRowCount();
        for (int i = 0; i < length; i++) {
            String servCode = ServiceTable1.getValueAt(i,0).toString();
            for (int j = 0; j < service.getVopArr().size(); j++) {
                if(servCode.equals(service.getVopArr().get(j))){
                    ServiceTable1.getModel().setValueAt(true, i, 2);
                }
            }            
        }
        service.getVopOrSpecStatus(con.getConnection(), crb, 2);        
        for (int i = 0; i < length; i++) {
            String servCode = ServiceTable1.getValueAt(i,0).toString();
            for (int j = 0; j < service.getSpecArr().size(); j++) {
                if(servCode.equals(service.getSpecArr().get(j))){
                    ServiceTable1.getModel().setValueAt(true, i, 3);
                }
            }            
        }
//</editor-fold>
    }//GEN-LAST:event_openServiceSettingsDialogActionPerformed

    private void addDocToServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDocToServActionPerformed
        int row = ServiceTable.getSelectedRow();
        if(row != -1){
            
            String crb = crbCode.split("\\.")[0];
            dialog4.setVisible(true);
            CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillDoctorTable(con.getConnection(), crb));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                DocTable2.setModel(tm);
                DocTableModify(DocTable2); 
        }else{
            JOptionPane.showMessageDialog(null, "Выберите услугу из таблицы"); 
        }
    }//GEN-LAST:event_addDocToServActionPerformed

    private void okButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButton3ActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Добавление услуги к врачу через диалоговое окно">
        int row1 = ServiceTable.getSelectedRow();
        int row = DocTable2.getSelectedRow();
        if(row != -1){
            String servCode = ServiceTable.getValueAt(row1,0).toString();
            
            String crb = crbCode.split("\\.")[0];
            String v002= DocTable2.getValueAt(row,2).toString();
            String v015= DocTable2.getValueAt(row,3).toString();
            String docName = DocTable2.getValueAt(row,0).toString();
            String snils = DocTable2.getValueAt(row,1).toString();
            for (int i = 0; i < DocServTable.getRowCount(); i++) {
                String v0021= DocServTable.getValueAt(i,1).toString();
                String v0151= DocServTable.getValueAt(i,2).toString();
                String docName1 = DocServTable.getValueAt(i,0).toString();
                if(v0021.equals(v002) && v0151.equals(v015) && docName1.equals(docName)){
                    JOptionPane.showMessageDialog(null, "Выбранный врач уже прикреплен к данной услуге"); 
                    return;
                }  
            }
            
            
            doctor.ChangeDoctorService(con.getConnection(), servCode, snils, crb, docName, v002, v015);
            CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillServDocTable(con.getConnection(), crb, servCode));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                DocServTable.setModel(tm);
                LpuDocTableModify(DocServTable);
                int situation = 0;
                
                String newLpu = doctor.getDocService(con.getConnection(), snils, docName, crb, v002, v015);
             
            if(newLpu.contains(",,")){
                situation = 1;
            }
            String str[] = newLpu.split("");
            
            int size = str.length;
            
            if(str[0].equals(",")){
                situation = 2;
            }
            if(str[size-1].equals(",")){
                situation = 3;
            }
            if(situation != 0){
            doctor.CleanCommaFromServiceString(con.getConnection(), situation, snils, crb, docName, v002, v015);
            
            }
            dialog4.setVisible(false);
        }else{
            JOptionPane.showMessageDialog(null, "Выберите врача из таблицы"); 
        }
//</editor-fold>
      
    }//GEN-LAST:event_okButton3ActionPerformed

    private void DocTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DocTable2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DocTable2MouseClicked

    private void delDocFromServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delDocFromServActionPerformed
        int r1 = ServiceTable.getSelectedRow();
        int r2 = DocServTable.getSelectedRow();       
        if(r1 != -1){
          if(r2 != -1){
            
            String crb = crbCode.split("\\.")[0];
            String servCode = ServiceTable.getValueAt(r1,0).toString();
            String v002= DocServTable.getValueAt(r2,1).toString();
            String v015= DocServTable.getValueAt(r2,2).toString();
            String docName = DocServTable.getValueAt(r2,0).toString();
            String snils = doctor.getDocSnils(con.getConnection(), docName, crb, v002, v015);
            
            doctor.DeleteServiceFromDoctor(con.getConnection(), snils, servCode, crb, docName, v002, v015); 
            int situation = 0;
            String newServ = doctor.getDocService(con.getConnection(), snils, docName, crb, v002, v015);
             
            if(newServ.contains(",,")){
                situation = 1;
            }
            String str[] = newServ.split("");           
            int size = str.length;           
            if(str[0].equals(",")){
                situation = 2;
            }
            if(str[size-1].equals(",")){
                situation = 3;
            }
            if(situation != 0){   
                doctor.CleanCommaFromLpuString(con.getConnection(), situation, snils, crb, docName, v002, v015);
            }
           CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillServDocTable(con.getConnection(), crb, servCode));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                DocServTable.setModel(tm);
                LpuDocTableModify(DocServTable);  
        }else JOptionPane.showMessageDialog(null, "Выберите врача."); 
      
        }else JOptionPane.showMessageDialog(null, "Выберите услугу."); 
        
    }//GEN-LAST:event_delDocFromServActionPerformed

    private void importDoctorsFromExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importDoctorsFromExcelActionPerformed
        DocTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ФИО", "СНИЛС", "Код V002", "Код V015", "Участок"
            }
        ));
        if (DocTable.getColumnModel().getColumnCount() > 0) {
        DocTable.getColumnModel().getColumn(0).setPreferredWidth(220);
        DocTable.getColumnModel().getColumn(1).setPreferredWidth(120);
        }
        DefaultTableModel dm = (DefaultTableModel) DocTable.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        
        readDoc = new ReadDoctorsFromExcel();
        OpenFile(readDoc);
    }//GEN-LAST:event_importDoctorsFromExcelActionPerformed

    private void saveExcelDocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveExcelDocsActionPerformed
        
        String crb = crbCode.split("\\.")[0];
        try {
             readDoc.saveToDB(DocTable, con.getConnection(), crb, doctor);
             JOptionPane.showMessageDialog(null, "Данные успешно загружены в базу.");
             
        } catch (Exception e) {
        }
       CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillDoctorTable(con.getConnection(), crb));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                DocTable.setModel(tm);
                DocTableModify(DocTable);
       saveExcelDocs.setEnabled(false); 
    }//GEN-LAST:event_saveExcelDocsActionPerformed

    private void deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserActionPerformed
        int row = UserTable.getSelectedRow();
        if(row != -1){
        String username = UserTable.getValueAt(row, 1).toString();
        userT.DeleteUser(con.getConnection(), username);
        UserTableShow();
        } else{
             JOptionPane.showMessageDialog(null, "Выберите пользователя.");
        }
    }//GEN-LAST:event_deleteUserActionPerformed
   
    private void OpenFile(ReadDoctorsFromExcel readDoc){       
        JFileChooser fileopen = new JFileChooser();
        int ret = fileopen.showDialog(null, "Открыть файл");
        if (ret == JFileChooser.OPEN_DIALOG) 
        {
            try {               
                File fl = fileopen.getSelectedFile();
                String path = fl.getAbsolutePath();
                readDoc.readFromExcel(path,DocTable);
                saveExcelDocs.setEnabled(true);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
       
        
    }
    
    private void ServiceSettingsTableModify(){
        //<editor-fold defaultstate="collapsed" desc="Модификация таблицы с услугами(при назначении врачей)"> 
        ServiceTable1.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        ServiceTable1.setFont(new java.awt.Font("Arial", 0, 14));
        ServiceTable1.setRowHeight(22);
        ServiceTable1.getColumnModel().getColumn(0).setHeaderValue("Код");
        ServiceTable1.getColumnModel().getColumn(1).setHeaderValue("Наименование");
        ServiceTable1.getColumnModel().getColumn(2).setHeaderValue("ВОП");
        ServiceTable1.getColumnModel().getColumn(3).setHeaderValue("Спец");
        ServiceTable1.getColumnModel().getColumn(0).setPreferredWidth(110);
        ServiceTable1.getColumnModel().getColumn(1).setPreferredWidth(420);
        ServiceTable1.getColumnModel().getColumn(0).setMaxWidth(110);
        ServiceTable1.getColumnModel().getColumn(2).setCellEditor(ServiceTable1.getDefaultEditor(Boolean.class)); 
        ServiceTable1.getColumnModel().getColumn(2).setCellRenderer(ServiceTable1.getDefaultRenderer(Boolean.class));
        ServiceTable1.getColumnModel().getColumn(3).setCellEditor(ServiceTable1.getDefaultEditor(Boolean.class)); 
        ServiceTable1.getColumnModel().getColumn(3).setCellRenderer(ServiceTable1.getDefaultRenderer(Boolean.class));
        
    }        
//</editor-fold>

    
    public void DelDocFromLPU(){
        //<editor-fold defaultstate="collapsed" desc="Удаление врача из участка">
        int r1 = LpuTable.getSelectedRow();
        int r2 = LpuDocTable.getSelectedRow();       
        if(r1 != -1){
          if(r2 != -1){
            
            String crb = crbCode.split("\\.")[0];
            String lpuID = LpuTable.getValueAt(r1,0).toString();
            String v002= LpuDocTable.getValueAt(r2,1).toString();
            String v015= LpuDocTable.getValueAt(r2,2).toString();
            String docName = LpuDocTable.getValueAt(r2,0).toString();
            String snils = doctor.getDocSnils(con.getConnection(), docName, crb, v002, v015);
            
            doctor.DeleteLpuFromDoctor(con.getConnection(), snils, lpuID, crb, docName, v002, v015); 
            int situation = 0;
            String newLpu = doctor.getDocLpu(con.getConnection(), snils, docName, crb, v002, v015);
             
            if(newLpu.contains(",,")){
                situation = 1;
            }
            String str[] = newLpu.split("");
            
            int size = str.length;
            
            if(str[0].equals(",")){
                situation = 2;
            }
            if(str[size-1].equals(",")){
                situation = 3;
            }
            if(situation != 0){
                
         
           doctor.CleanCommaFromLpuString(con.getConnection(), situation, snils, crb, docName, v002, v015);
            }
        }else JOptionPane.showMessageDialog(null, "Выберите врача."); 
      
        }else JOptionPane.showMessageDialog(null, "Выберите участок."); 
    }
//</editor-fold>
        
    
    public void UpdateLpuDocTable(){
        //<editor-fold defaultstate="collapsed" desc="Изменение участка у выбр врача">
        int row  = -1;
        row   = LpuTable.getSelectedRow();       
        if( row != -1){
            
            String crb = crbCode.split("\\.")[0];
            String lpuID = LpuTable.getValueAt(row,0).toString();
              CrbTableModel tm = new CrbTableModel(false, con.getConnection()); 
            try {           
                tm.setDataSource(doctor.FillLpuDocTable(con.getConnection(),crb,lpuID));
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }  
                LpuDocTable.setModel(tm);
            }LpuDocTableModify(LpuDocTable);
    }
//</editor-fold>
        
    
    private void LpuDocTableModify(JTable table){
        table.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        table.setFont(new java.awt.Font("Arial", 0, 14));
        table.setRowHeight(22);
        table.getColumnModel().getColumn(0).setHeaderValue("ФИО");
        table.getColumnModel().getColumn(1).setHeaderValue("V002");
        table.getColumnModel().getColumn(2).setHeaderValue("V015");
        table.getColumnModel().getColumn(0).setPreferredWidth(160);
        table.getColumnModel().getColumn(0).setMaxWidth(300);
        table.getColumnModel().getColumn(1).setPreferredWidth(80);
        table.getColumnModel().getColumn(2).setPreferredWidth(80);
        table.getColumnModel().getColumn(1).setWidth(110);
    }
    
    public boolean CheckSnils(String txt){
        //<editor-fold defaultstate="collapsed" desc="Проверка нонтр суммы на четность">
        System.out.println(txt.substring(9, 11));
        String[] str = txt.split("");
        int sum = 0;
        if(str.length != 11){
            return false;
        } else {
            for (int j = 0; j < 9; j++) {
                sum += Integer.parseInt(str[j]) * (8- j +1);
                sum = sum % 101;
            }       
                if(Integer.parseInt(txt.substring(9, 11)) == sum){
                    return true;
                }else{
                    return false;
                }           
        }
//</editor-fold>      
    }
    
//    public static PrintService choosePrinter() {
//    PrinterJob printJob = PrinterJob.getPrinterJob();
//    if(printJob.printDialog()) {
//        return printJob.getPrintService();          
//    }
//    else {
//        return null;
//    }
//}
//
//public static void printPDF(PrintService printer)
//    throws IOException, PrinterException {
//    String filename = "C:\\1.pdf";
//    PrinterJob job = PrinterJob.getPrinterJob();
//    job.setPrintService(printer);
//    PDDocument doc = PDDocument.load(filename);
//    
//    doc.silentPrint(job);
//    doc.close();
//}
    
//    public void test() {
////        FileInputStream psStream = null;
////        String filename = "C:\\Users\\Равиль\\Desktop\\template.doc";
////        try {
////            psStream = new FileInputStream(filename);
////            } catch (FileNotFoundException ffne) {
////            }
////            if (psStream == null) {
////                return;
////            }
////        DocFlavor psInFormat = DocFlavor.INPUT_STREAM.AUTOSENSE;
////        Doc myDoc = new SimpleDoc(psStream, psInFormat, null);  
////        PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();
////        
////        PrintService[] services = PrintServiceLookup.lookupPrintServices(psInFormat, aset);
////         
////        
////        // this step is necessary because I have several printers configured
////        PrintService myPrinter = null;
////        for (PrintService service : services) {
////            String svcName = service.toString();
////            if (svcName.contains("Samsung ML-1640 Series")) {
////                myPrinter = service;
////                System.out.println("my printer found: "+svcName);
////                break;
////            }
////        }
////         
////        if (myPrinter != null) {            
////            DocPrintJob job = myPrinter.createPrintJob();
////            aset.add(new Copies(10)); 
////        aset.add(Sides.DUPLEX);
////            try {
////            job.print(myDoc, aset);
////             
////            } catch (Exception pe) {}
////        } else {
////            System.out.println("no printer services found");
////        }
//
//    }
    


   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminJFrame().setVisible(true);
            }
        });
    }
    private FillAdminTable adminTable  = new FillAdminTable();
    private String crbCode = "";
    private ReadDoctorsFromExcel readDoc;
    private FillUsersTable userT = new FillUsersTable();
    private FillDocTable doctor = new FillDocTable();
    private FillLpuTable lpu = new FillLpuTable();
    private FillSettingsServiceTable service = new FillSettingsServiceTable();
    private final StartDB con;
    private GetPatientData data;
    private DocsCreation doc;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DocPanel;
    private javax.swing.JPanel DocServPanel;
    private javax.swing.JTable DocServTable;
    private javax.swing.JTable DocTable;
    private javax.swing.JTable DocTable1;
    private javax.swing.JTable DocTable2;
    private javax.swing.JPanel FapPanel;
    private javax.swing.JTable FapTable;
    private javax.swing.JScrollPane JScrollPane7;
    private javax.swing.JTable LpuDocTable;
    private javax.swing.JPanel LpuPanel;
    private javax.swing.JTable LpuTable;
    private javax.swing.JTextField LpuTxt;
    private javax.swing.JTable MainLpuTable;
    private javax.swing.JTable ServiceTable;
    private javax.swing.JTable ServiceTable1;
    private javax.swing.JButton ShowDocP;
    private javax.swing.JButton ShowDocServ;
    private javax.swing.JButton ShowFapP;
    private javax.swing.JButton ShowLpuP;
    private javax.swing.JButton ShowUsersP;
    private javax.swing.JButton ShowVopP;
    private javax.swing.JTable Table;
    private javax.swing.JTable UserTable;
    private javax.swing.JPanel UsersPanel;
    private javax.swing.JPanel VopPanel;
    private javax.swing.JButton addDocToLpu;
    private javax.swing.JButton addDocToServ;
    private javax.swing.JButton addDoctor;
    private javax.swing.JButton addFap;
    private javax.swing.JButton addLPU;
    private javax.swing.JButton addUser;
    private javax.swing.JButton addlputodoc;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JButton backToMain;
    private com.toedter.calendar.JDateChooser date1;
    private com.toedter.calendar.JDateChooser date2;
    private javax.swing.JButton delDocFromLpu;
    private javax.swing.JButton delDocFromServ;
    private javax.swing.JButton delDoctor;
    private javax.swing.JButton delLpu;
    private javax.swing.JButton deleteUser;
    private javax.swing.JDialog dialog1;
    private javax.swing.JDialog dialog2;
    private javax.swing.JDialog dialog3;
    private javax.swing.JDialog dialog4;
    private javax.swing.JButton exitBut;
    private javax.swing.JTextField fapNameTxt;
    private javax.swing.JButton importDoctorsFromExcel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JButton loginBut;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JTextField loginTxt;
    private javax.swing.JComboBox<String> lpuList;
    private javax.swing.JTextField middleTxt;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JFormattedTextField newFapCodTxt;
    private javax.swing.JButton okButton;
    private javax.swing.JButton okButton1;
    private javax.swing.JButton okButton2;
    private javax.swing.JButton okButton3;
    private javax.swing.JFormattedTextField oldFapCodTxt;
    private javax.swing.JButton openServiceSettingsDialog;
    private javax.swing.JButton outAdmin;
    private javax.swing.JPasswordField passTxt;
    private javax.swing.JButton printForm;
    private javax.swing.JButton saveExcelDocs;
    private javax.swing.JButton saveFile;
    private javax.swing.JButton searchBut1;
    private javax.swing.JButton settingsBut;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JFormattedTextField snilsTxt;
    private javax.swing.JPanel subLogin;
    private javax.swing.JTextField surnameTxt;
    private javax.swing.JTextField userPassTxt;
    private javax.swing.JComboBox<String> userStatusCB;
    private javax.swing.JTextField usernameTxt;
    private javax.swing.JTextField v002Txt;
    private javax.swing.JTextField v015Txt;
    // End of variables declaration//GEN-END:variables
}
