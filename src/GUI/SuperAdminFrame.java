/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DB.StartDB;
import ExcelRead.CrbRead;
import ExcelRead.FapRead;
import ExcelRead.PatientRead;
import ExtendedLogic.FillAllUsersTable;
import ExtendedLogic.FillServiceParamTable;
import ExtendedLogic.FillServiceTable;
import ExtendedLogic.SaveParamTable;
import ExtendedLogic.UpdateDocCodeTable;
import TableModel.CrbTableModel;
import TableModel.PatientTableModel;
import java.awt.Component;
import java.io.File;
import java.sql.ResultSet;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Равиль
 */
public class SuperAdminFrame extends javax.swing.JFrame {

    /**
     * Creates new form SuperAdminFrame
     */
    private StartDB con ;
    private PatientRead patient ;
    private CrbRead crb;
    private FapRead fap;
    private FillAllUsersTable user = new FillAllUsersTable();
    private boolean flagChanged;
    private boolean flagCancel;
    
    public SuperAdminFrame() {
        initComponents();
        con = new StartDB();
        con.Start();
        ServiceListTableShow();
        ServiceTableShow();
        SavePatientList.setEnabled(false);
        SaveCrbList.setEnabled(false);
        SaveFapList.setEnabled(false);
//        ParamTableShow();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialog1 = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        usernameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        userPassTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        userStatusCB = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        crbCodeTxt = new javax.swing.JTextField();
        settingsPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        ShowCrbP = new javax.swing.JButton();
        ShowFapP = new javax.swing.JButton();
        ShowDocSetP = new javax.swing.JButton();
        ShowPatP = new javax.swing.JButton();
        ShowAdminP = new javax.swing.JButton();
        ShowParam = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        LoadPatPanel = new  GradientPanel();
        LoadPatientListExcel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        PatientTable = new javax.swing.JTable();
        SavePatientList = new javax.swing.JButton();
        CrbPanel = new GradientPanel();
        LoadCrbListExcel = new javax.swing.JButton();
        SaveCrbList = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        CrbTable = new javax.swing.JTable();
        FapPanel = new GradientPanel();
        LoadFapListExcel = new javax.swing.JButton();
        SaveFapList = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        FapTable = new javax.swing.JTable();
        AdminSetPanel = new GradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        addAdmin = new javax.swing.JButton();
        delAdmin = new javax.swing.JButton();
        DocSetPanel = new GradientPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        DocCodeTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        ServiceListTable = new javax.swing.JTable();
        SaveDocServParams = new javax.swing.JButton();
        ParamPanel =  new GradientPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ServiceTable = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        ParamTable = new javax.swing.JTable();
        SaveParam1 = new javax.swing.JButton();

        dialog1.setName("dialog1"); // NOI18N
        dialog1.setSize(436, 335);
        dialog1.setResizable(false);
        dialog1.setLocationRelativeTo(jPanel2);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Добавление пользователя", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        okButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/img/ok24.png"))); // NOI18N
        okButton.setText("Приять ");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        usernameTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        usernameTxt.setName("usernameTxt"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Имя пользователя");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Пароль");
        jLabel15.setName("jLabel15"); // NOI18N

        userPassTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userPassTxt.setName("userPassTxt"); // NOI18N

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Права доступа");
        jLabel17.setName("jLabel17"); // NOI18N

        userStatusCB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        userStatusCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Администатор", "Cупер-админ" }));
        userStatusCB.setName("userStatusCB"); // NOI18N
        userStatusCB.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                userStatusCBPropertyChange(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Код  ЦРБ(xxxxxx.x)");
        jLabel5.setName("jLabel5"); // NOI18N

        crbCodeTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        crbCodeTxt.setName("crbCodeTxt"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userStatusCB, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userPassTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(crbCodeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(userPassTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(userStatusCB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(crbCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialog1Layout = new javax.swing.GroupLayout(dialog1.getContentPane());
        dialog1.getContentPane().setLayout(dialog1Layout);
        dialog1Layout.setHorizontalGroup(
            dialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dialog1Layout.setVerticalGroup(
            dialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1080, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        settingsPanel.setName("settingsPanel"); // NOI18N
        settingsPanel.setPreferredSize(new java.awt.Dimension(880, 730));

        jPanel1.setBackground(new java.awt.Color(239, 239, 243));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(860, 720));

        ShowCrbP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowCrbP.setText("Загрузка ЦРБ");
        ShowCrbP.setName("ShowCrbP"); // NOI18N
        ShowCrbP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowCrbPActionPerformed(evt);
            }
        });

        ShowFapP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowFapP.setText("Загрузка ФАПов");
        ShowFapP.setName("ShowFapP"); // NOI18N
        ShowFapP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowFapPActionPerformed(evt);
            }
        });

        ShowDocSetP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowDocSetP.setText("<html>Настройка<br />специальностей врачей</html>");
        ShowDocSetP.setName("ShowDocSetP"); // NOI18N
        ShowDocSetP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowDocSetPActionPerformed(evt);
            }
        });

        ShowPatP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowPatP.setText("Загрузка пациентов");
        ShowPatP.setName("ShowPatP"); // NOI18N
        ShowPatP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowPatPActionPerformed(evt);
            }
        });

        ShowAdminP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowAdminP.setText("Настройка админ-ов");
        ShowAdminP.setName("ShowAdminP"); // NOI18N
        ShowAdminP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAdminPActionPerformed(evt);
            }
        });

        ShowParam.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ShowParam.setText("Настройка параметров");
        ShowParam.setName("ShowParam"); // NOI18N
        ShowParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowParamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShowDocSetP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                    .addComponent(ShowCrbP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowFapP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowPatP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowAdminP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ShowParam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ShowPatP, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(ShowCrbP, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(ShowFapP, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(ShowAdminP, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(ShowDocSetP, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(ShowParam, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
        );

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(651, 710));
        jPanel2.setLayout(new java.awt.CardLayout());

        LoadPatPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Загрузка пациентов", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        LoadPatPanel.setName("LoadPatPanel"); // NOI18N
        LoadPatPanel.setPreferredSize(new java.awt.Dimension(651, 710));

        LoadPatientListExcel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        LoadPatientListExcel.setText("Загрузить пациентов");
        LoadPatientListExcel.setName("LoadPatientListExcel"); // NOI18N
        LoadPatientListExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadPatientListExcelActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setName("jScrollPane2"); // NOI18N

        PatientTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        PatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ФИО", "ДР", "Пол", "Адрес", "Участок", "ЦРБ", "СНИЛС", "Паспорт", "Ст полис", "Нов полис", "Телефон"
            }
        ));
        PatientTable.setName("PatientTable"); // NOI18N
        PatientTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        PatientTable.setRowHeight(20);
        PatientTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(PatientTable);
        if (PatientTable.getColumnModel().getColumnCount() > 0) {
            PatientTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            PatientTable.getColumnModel().getColumn(0).setMaxWidth(180);
            PatientTable.getColumnModel().getColumn(1).setMinWidth(130);
            PatientTable.getColumnModel().getColumn(1).setPreferredWidth(130);
            PatientTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            PatientTable.getColumnModel().getColumn(2).setMaxWidth(180);
        }

        SavePatientList.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SavePatientList.setText("Сохранить данные в базу");
        SavePatientList.setName("SavePatientList"); // NOI18N
        SavePatientList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePatientListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoadPatPanelLayout = new javax.swing.GroupLayout(LoadPatPanel);
        LoadPatPanel.setLayout(LoadPatPanelLayout);
        LoadPatPanelLayout.setHorizontalGroup(
            LoadPatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoadPatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LoadPatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addGroup(LoadPatPanelLayout.createSequentialGroup()
                        .addComponent(LoadPatientListExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SavePatientList, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        LoadPatPanelLayout.setVerticalGroup(
            LoadPatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoadPatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LoadPatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoadPatientListExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SavePatientList, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel2.add(LoadPatPanel, "card5");

        CrbPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Загрузка ЦРБ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        CrbPanel.setName("CrbPanel"); // NOI18N

        LoadCrbListExcel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        LoadCrbListExcel.setText("Загрузить список ЦРБ");
        LoadCrbListExcel.setName("LoadCrbListExcel"); // NOI18N
        LoadCrbListExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadCrbListExcelActionPerformed(evt);
            }
        });

        SaveCrbList.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SaveCrbList.setText("Сохранить данные в базу");
        SaveCrbList.setName("SaveCrbList"); // NOI18N
        SaveCrbList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveCrbListActionPerformed(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setName("jScrollPane3"); // NOI18N

        CrbTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CrbTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Старый рег.код", "Наименование", "Новый рег.код"
            }
        ));
        CrbTable.setName("CrbTable"); // NOI18N
        CrbTable.setRowHeight(20);
        jScrollPane3.setViewportView(CrbTable);
        if (CrbTable.getColumnModel().getColumnCount() > 0) {
            CrbTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            CrbTable.getColumnModel().getColumn(0).setMaxWidth(180);
            CrbTable.getColumnModel().getColumn(1).setMinWidth(130);
            CrbTable.getColumnModel().getColumn(1).setPreferredWidth(130);
            CrbTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            CrbTable.getColumnModel().getColumn(2).setMaxWidth(180);
        }

        javax.swing.GroupLayout CrbPanelLayout = new javax.swing.GroupLayout(CrbPanel);
        CrbPanel.setLayout(CrbPanelLayout);
        CrbPanelLayout.setHorizontalGroup(
            CrbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrbPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CrbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addGroup(CrbPanelLayout.createSequentialGroup()
                        .addComponent(LoadCrbListExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SaveCrbList, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        CrbPanelLayout.setVerticalGroup(
            CrbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrbPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CrbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoadCrbListExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveCrbList, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel2.add(CrbPanel, "card4");

        FapPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Загрузка ФАПов", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        FapPanel.setName("FapPanel"); // NOI18N

        LoadFapListExcel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        LoadFapListExcel.setText("Загрузить список ФАПов");
        LoadFapListExcel.setName("LoadFapListExcel"); // NOI18N
        LoadFapListExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadFapListExcelActionPerformed(evt);
            }
        });

        SaveFapList.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SaveFapList.setText("Сохранить данные в базу");
        SaveFapList.setName("SaveFapList"); // NOI18N
        SaveFapList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFapListActionPerformed(evt);
            }
        });

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setName("jScrollPane4"); // NOI18N

        FapTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        FapTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Старый рег.код", "Наименование", "Новый рег.код"
            }
        ));
        FapTable.setName("FapTable"); // NOI18N
        FapTable.setRowHeight(20);
        jScrollPane4.setViewportView(FapTable);
        if (FapTable.getColumnModel().getColumnCount() > 0) {
            FapTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            FapTable.getColumnModel().getColumn(0).setMaxWidth(180);
            FapTable.getColumnModel().getColumn(1).setMinWidth(130);
            FapTable.getColumnModel().getColumn(1).setPreferredWidth(130);
            FapTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            FapTable.getColumnModel().getColumn(2).setMaxWidth(180);
        }

        javax.swing.GroupLayout FapPanelLayout = new javax.swing.GroupLayout(FapPanel);
        FapPanel.setLayout(FapPanelLayout);
        FapPanelLayout.setHorizontalGroup(
            FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addGroup(FapPanelLayout.createSequentialGroup()
                        .addComponent(LoadFapListExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SaveFapList, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        FapPanelLayout.setVerticalGroup(
            FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoadFapListExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveFapList, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel2.add(FapPanel, "card2");

        AdminSetPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Настройка прав доступа для администраторов", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        AdminSetPanel.setName("AdminSetPanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        UserTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Учреждение", "Username"
            }
        ));
        UserTable.setName("UserTable"); // NOI18N
        UserTable.setRowHeight(20);
        UserTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(UserTable);
        if (UserTable.getColumnModel().getColumnCount() > 0) {
            UserTable.getColumnModel().getColumn(1).setMaxWidth(120);
        }

        addAdmin.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        addAdmin.setText("Добавить нового пользователя");
        addAdmin.setName("addAdmin"); // NOI18N
        addAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAdminActionPerformed(evt);
            }
        });

        delAdmin.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        delAdmin.setText("Удалить пользователя");
        delAdmin.setName("delAdmin"); // NOI18N
        delAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AdminSetPanelLayout = new javax.swing.GroupLayout(AdminSetPanel);
        AdminSetPanel.setLayout(AdminSetPanelLayout);
        AdminSetPanelLayout.setHorizontalGroup(
            AdminSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminSetPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdminSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminSetPanelLayout.createSequentialGroup()
                        .addComponent(addAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(delAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE))
                .addContainerGap())
        );
        AdminSetPanelLayout.setVerticalGroup(
            AdminSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminSetPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AdminSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jPanel2.add(AdminSetPanel, "card6");

        DocSetPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Настройка соответствий \"специальность-услуга\"", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        DocSetPanel.setName("DocSetPanel"); // NOI18N
        DocSetPanel.setPreferredSize(new java.awt.Dimension(651, 710));

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        DocCodeTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DocCodeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "V002", "V015"
            }
        ));
        DocCodeTable.setName("DocCodeTable"); // NOI18N
        DocCodeTable.setRowHeight(22);
        DocCodeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(DocCodeTable);
        if (DocCodeTable.getColumnModel().getColumnCount() > 0) {
            DocCodeTable.getColumnModel().getColumn(0).setPreferredWidth(110);
            DocCodeTable.getColumnModel().getColumn(0).setMaxWidth(110);
        }

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        ServiceListTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ServiceListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Код услуги", "Наименование"
            }
        ));
        ServiceListTable.setName("ServiceListTable"); // NOI18N
        ServiceListTable.setRowHeight(24);
        ServiceListTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(ServiceListTable);
        if (ServiceListTable.getColumnModel().getColumnCount() > 0) {
            ServiceListTable.getColumnModel().getColumn(0).setPreferredWidth(110);
            ServiceListTable.getColumnModel().getColumn(0).setMaxWidth(110);
        }

        SaveDocServParams.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SaveDocServParams.setText("Сохранить");
        SaveDocServParams.setName("SaveDocServParams"); // NOI18N
        SaveDocServParams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveDocServParamsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DocSetPanelLayout = new javax.swing.GroupLayout(DocSetPanel);
        DocSetPanel.setLayout(DocSetPanelLayout);
        DocSetPanelLayout.setHorizontalGroup(
            DocSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocSetPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DocSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DocSetPanelLayout.createSequentialGroup()
                        .addComponent(SaveDocServParams, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(DocSetPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        DocSetPanelLayout.setVerticalGroup(
            DocSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocSetPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DocSetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SaveDocServParams, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jPanel2.add(DocSetPanel, "card3");

        ParamPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Нормы для параметров", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 18))); // NOI18N
        ParamPanel.setName("ParamPanel"); // NOI18N

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        ServiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ServiceTable.setName("ServiceTable"); // NOI18N
        ServiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ServiceTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(ServiceTable);

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        ParamTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ParamTable.setName("ParamTable"); // NOI18N
        ParamTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ParamTableKeyReleased(evt);
            }
        });
        jScrollPane8.setViewportView(ParamTable);

        SaveParam1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SaveParam1.setText("Принять значения");
        SaveParam1.setName("SaveParam1"); // NOI18N
        SaveParam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveParam1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ParamPanelLayout = new javax.swing.GroupLayout(ParamPanel);
        ParamPanel.setLayout(ParamPanelLayout);
        ParamPanelLayout.setHorizontalGroup(
            ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamPanelLayout.createSequentialGroup()
                .addGroup(ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ParamPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE))
                    .addComponent(SaveParam1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        ParamPanelLayout.setVerticalGroup(
            ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamPanelLayout.createSequentialGroup()
                .addGroup(ParamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8)
                    .addComponent(jScrollPane5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SaveParam1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 247, Short.MAX_VALUE))
        );

        jPanel2.add(ParamPanel, "card7");

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        getContentPane().add(settingsPanel, "card4");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ShowAdminPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAdminPActionPerformed
        ButtonPress();
        if (!flagCancel && !flagChanged) {
            LoadPatPanel.setVisible(false);
            CrbPanel.setVisible(false);      
            FapPanel.setVisible(false);
            DocSetPanel.setVisible(false);
            AdminSetPanel.setVisible(true);
            ParamPanel.setVisible(false);           
        }
        flagCancel = false;
        UserTableShow();
    }//GEN-LAST:event_ShowAdminPActionPerformed

    private void ShowPatPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowPatPActionPerformed
        ButtonPress();
        if (!flagCancel && !flagChanged) {
            LoadPatPanel.setVisible(true);
            CrbPanel.setVisible(false);      
            FapPanel.setVisible(false);
            DocSetPanel.setVisible(false);
            AdminSetPanel.setVisible(false);
            ParamPanel.setVisible(false);
            
        }
        flagCancel = false;
    }//GEN-LAST:event_ShowPatPActionPerformed
        
    private void OpenFile(Object obj){       
        JFileChooser fileopen = new JFileChooser();
        int ret = fileopen.showDialog(null, "Открыть файл");
        if (ret == JFileChooser.OPEN_DIALOG) 
        {
            try {               
                File fl = fileopen.getSelectedFile();
                String path = fl.getAbsolutePath();
                if(obj instanceof PatientRead){
                    patient = new PatientRead();
                    patient.readFromExcel(path,PatientTable);
                    SavePatientList.setEnabled(true);
                }
                if(obj instanceof CrbRead){
                    crb = new CrbRead();
                    crb.readFromExcel(path,CrbTable); 
                    SaveCrbList.setEnabled(true);
                }
                if(obj instanceof FapRead){
                    fap = new FapRead();
                    fap.readFromExcel(path,FapTable); 
                    SaveFapList.setEnabled(true);
                }
                
            } catch (Exception e) {
                System.out.println(e);
            }
        }
       
        
    }
    
    private void ShowDocSetPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowDocSetPActionPerformed
        ButtonPress();
        if (!flagCancel && !flagChanged) {
            LoadPatPanel.setVisible(false);
            CrbPanel.setVisible(false);      
            FapPanel.setVisible(false);
            DocSetPanel.setVisible(true);
            AdminSetPanel.setVisible(false);
            ParamPanel.setVisible(false);
            
        }
        flagCancel = false;
    }//GEN-LAST:event_ShowDocSetPActionPerformed
    
    public void ServiceTableShow(){
        FillServiceParamTable service = new FillServiceParamTable();
        PatientTableModel tm = new PatientTableModel(false, con.getConnection());          
        try {
            
            tm.setDataSource(service.FillServParamTable(con.getConnection()));         
            ServiceTable.setModel(tm);
        } catch (Exception ex) {
            //log.error(ex, ex);
            System.out.println(ex);
        }
        ServiceTableModify();   
    }
    
    public void ParamTableShow(String text){
        FillServiceParamTable service = new FillServiceParamTable();    
        try {
            ResultSet rs = service.FillParamTable(con.getConnection(), text);
            ParamTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            //log.error(ex, ex);
            System.out.println(ex);
        }
        ParamTableModify();
    }
    
    private void ParamTableModify(){
        ParamTable.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        ParamTable.setFont(new java.awt.Font("Arial", 0, 14));
        ParamTable.setRowHeight(25);
        ParamTable.getColumnModel().getColumn(1).setHeaderValue("Параметр");
        ParamTable.getColumnModel().getColumn(2).setHeaderValue("Ниж. граница(жен.)");
        ParamTable.getColumnModel().getColumn(3).setHeaderValue("Вер. граница(жен.");
        ParamTable.getColumnModel().getColumn(4).setHeaderValue("Ниж. граница(муж.)");
        ParamTable.getColumnModel().getColumn(5).setHeaderValue("Вер. граница(муж.");
        ParamTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        ParamTable.getColumnModel().getColumn(0).setMaxWidth(20);
        updateRowHeights(ParamTable);
    }
    
    private void ServiceTableModify(){
        ServiceTable.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        ServiceTable.setFont(new java.awt.Font("Arial", 0, 14));
        ServiceTable.setRowHeight(25);
        ServiceTable.getColumnModel().getColumn(0).setHeaderValue("Код услуги");
        ServiceTable.getColumnModel().getColumn(1).setHeaderValue("Наименование");
        ServiceTable.getColumnModel().getColumn(0).setPreferredWidth(110);
        ServiceTable.getColumnModel().getColumn(0).setMaxWidth(110);
        updateRowHeights(ServiceTable);
    }
               
    public void ServiceListTableShow(){
        FillServiceTable service = new FillServiceTable();
        PatientTableModel tm = new PatientTableModel(false, con.getConnection());          
        try {
            
            tm.setDataSource(service.FillServiceListTable(con.getConnection()));         
            ServiceListTable.setModel(tm);
        } catch (Exception ex) {
            //log.error(ex, ex);
            System.out.println(ex);
        }
        int length = ServiceListTable.getRowCount();
        ServiceListTableModify();
        DefaultTableModel model = (DefaultTableModel) DocCodeTable.getModel();
        String [] data = {" "," "};
        for (int i = 0; i < length; i++) {
            model.addRow(data);
        }    
    }
    
    private void ServiceListTableModify(){
        ServiceListTable.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        ServiceListTable.setFont(new java.awt.Font("Arial", 0, 14));
        ServiceListTable.setRowHeight(22);
        ServiceListTable.getColumnModel().getColumn(0).setHeaderValue("Код услуги");
        ServiceListTable.getColumnModel().getColumn(1).setHeaderValue("Наименование");
        ServiceListTable.getColumnModel().getColumn(0).setPreferredWidth(110);
        ServiceListTable.getColumnModel().getColumn(0).setMaxWidth(110);
        updateRowHeights(ServiceListTable);
    }
    
    
    private void updateRowHeights(JTable Table){
    for (int row = 0; row < Table.getRowCount(); row++)
    {
        int rowHeight = Table.getRowHeight();

        for (int column = 0; column < Table.getColumnCount(); column++)
        {
            Component comp = Table.prepareRenderer(Table.getCellRenderer(row, column), row, column);
            rowHeight = Math.max(rowHeight, comp.getPreferredSize().height);
        }

        Table.setRowHeight(row, rowHeight);
    }
}
    
    private void ShowFapPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowFapPActionPerformed
        ButtonPress();
        if (!flagCancel && !flagChanged) {
            LoadPatPanel.setVisible(false);
            CrbPanel.setVisible(false);      
            FapPanel.setVisible(true);
            DocSetPanel.setVisible(false);
            AdminSetPanel.setVisible(false);
            ParamPanel.setVisible(false);
        }
        flagCancel = false;
    }//GEN-LAST:event_ShowFapPActionPerformed

    private void ShowCrbPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowCrbPActionPerformed
        ButtonPress();
        if (!flagCancel && !flagChanged) {
            LoadPatPanel.setVisible(false);
            AdminSetPanel.setVisible(false);     
            FapPanel.setVisible(false);
            DocSetPanel.setVisible(false);
            CrbPanel.setVisible(true);
            ParamPanel.setVisible(false);
            
        }
        flagCancel = false;
    }//GEN-LAST:event_ShowCrbPActionPerformed

    private void LoadPatientListExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadPatientListExcelActionPerformed
        DefaultTableModel dm = (DefaultTableModel) PatientTable.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        patient = new PatientRead();
        OpenFile(patient);
        
    }//GEN-LAST:event_LoadPatientListExcelActionPerformed

    private void SavePatientListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePatientListActionPerformed
        patient.saveToDB(PatientTable,con.getConnection());
    }//GEN-LAST:event_SavePatientListActionPerformed

    private void LoadCrbListExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadCrbListExcelActionPerformed
        DefaultTableModel dm = (DefaultTableModel) CrbTable.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        crb = new CrbRead();
        OpenFile(crb);
        
    }//GEN-LAST:event_LoadCrbListExcelActionPerformed

    private void SaveCrbListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveCrbListActionPerformed
        crb.saveToDB(CrbTable, con.getConnection());
    }//GEN-LAST:event_SaveCrbListActionPerformed

    private void LoadFapListExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadFapListExcelActionPerformed
        DefaultTableModel dm = (DefaultTableModel) FapTable.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        fap = new FapRead();
        OpenFile(fap);
    }//GEN-LAST:event_LoadFapListExcelActionPerformed

    private void SaveFapListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveFapListActionPerformed
        fap.saveToDB(FapTable, con.getConnection());
    }//GEN-LAST:event_SaveFapListActionPerformed

    private void SaveDocServParamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveDocServParamsActionPerformed
        
    }//GEN-LAST:event_SaveDocServParamsActionPerformed

    private void ShowParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowParamActionPerformed
        LoadPatPanel.setVisible(false);
        AdminSetPanel.setVisible(false);     
        FapPanel.setVisible(false);
        DocSetPanel.setVisible(false);
        CrbPanel.setVisible(false);
        ParamPanel.setVisible(true);
    }//GEN-LAST:event_ShowParamActionPerformed

    private void SaveParam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveParam1ActionPerformed
        Object[] options = {"Да", "Нет"};
            int n = JOptionPane.showOptionDialog(null, 
                    "Изменения произойдут во всех ЦРБ района. Желаете сохранить?", 
                    "Сохранение", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE,
                    null, 
                    options,  
                    options[0]);
            if (n == 0) {
                SaveParamTable a = new SaveParamTable();
                a.saveToDB(ParamTable, con.getConnection());
                flagChanged = false;
            }
            if (n == 1) {
                String text = (String) ServiceTable.getValueAt(ServiceTable.getSelectedRow(), 0);
                ParamTable.remove(this);
                ParamTableShow(text);
                flagChanged = false;
            }
            
        
    }//GEN-LAST:event_SaveParam1ActionPerformed

    private void ServiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ServiceTableMouseClicked
        SaveParamTable a = new SaveParamTable();
        if (flagChanged) {
            Object[] options = {"Да", "Нет", "Отмена"};
            int n = JOptionPane.showOptionDialog(null, 
                    "Изменения произойдут во всех ЦРБ района. Желаете сохранить?", 
                    "Сохранение", 
                    JOptionPane.YES_NO_CANCEL_OPTION, 
                    JOptionPane.QUESTION_MESSAGE,
                    null, 
                    options,  
                    options[0]);
            if (n == 0) {
//                a.saveToDB(ParamTable, con.getConnection());
//                String text = (String) ServiceTable.getValueAt(ServiceTable.getSelectedRow(), 0);
//                ParamTable.remove(this);
//        //        ParamTableShow(text);
//                flagChanged = false;
                flagChanged = a.saveToDB(ParamTable, con.getConnection());
            }
            if (n == 1) {
                String text = (String) ServiceTable.getValueAt(ServiceTable.getSelectedRow(), 0);
                ParamTable.remove(this);
                ParamTableShow(text);
                flagChanged = false;
            }
        }
        else{
            String text = (String) ServiceTable.getValueAt(ServiceTable.getSelectedRow(), 0);
            ParamTable.remove(this);
            ParamTableShow(text);
                
        }
        
        
    }//GEN-LAST:event_ServiceTableMouseClicked

    private void ParamTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ParamTableKeyReleased
        flagChanged = true; 
    }//GEN-LAST:event_ParamTableKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Object[] options = { "Да", "Нет" };
                int n = JOptionPane.showOptionDialog(evt.getWindow(), "Завершить работу программы?",
                                "Выход", JOptionPane.YES_NO_OPTION,
                                JOptionPane.QUESTION_MESSAGE, null, options,
                                options[0]);
                if (n == 0) {
                    evt.getWindow().setVisible(false);
                    System.exit(0);
                    
                }
    }//GEN-LAST:event_formWindowClosing

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        String username = usernameTxt.getText();
        String password = userPassTxt.getText();
        String status = userStatusCB.getSelectedItem().toString();
        int st = 1;
        if(status.equals("Cупер-админ")) {
            st = 0;
        }
        if(status.equals("Администратор")) st = 1;
        String crbCode = crbCodeTxt.getText();
        if(username.equals("")){
            JOptionPane.showMessageDialog(null, "Необходимо ввести имя пользователя.");
            return ;
        }
        if(password.equals("")){
            JOptionPane.showMessageDialog(null, "Необходимо ввести пароль.");
            return ;
        }
        if(status.equals("Администратор")){
            if(crbCode.equals("")){
                JOptionPane.showMessageDialog(null, "Необходимо ввести код ЦРБ.");
                return ;
            }
    }
            if(user.getUsername(con.getConnection(), username) == 0){
               JOptionPane.showMessageDialog(null, "Добавляемый пользователь имеется в системе.");
               return;           
        }
        user.InsertUser(con.getConnection(), username, password, crbCode, String.valueOf(st)); 
        dialog1.setVisible(false);
        usernameTxt.setText("");
        userPassTxt.setText("");
        crbCodeTxt.setText("");
        UserTableShow();    
    }//GEN-LAST:event_okButtonActionPerformed

    private void addAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAdminActionPerformed
        dialog1.setVisible(true);
    }//GEN-LAST:event_addAdminActionPerformed

    private void delAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delAdminActionPerformed
        int row = UserTable.getSelectedRow();
        if(row != -1){
            String username = UserTable.getValueAt(row, 1).toString();
            user.DeleteUser(con.getConnection(), username);
            UserTableShow();
        } else{
             JOptionPane.showMessageDialog(null, "Выберите пользователя.");
        }
    }//GEN-LAST:event_delAdminActionPerformed

    private void userStatusCBPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_userStatusCBPropertyChange
        if(userStatusCB.getSelectedIndex() == 1){
            crbCodeTxt.setEditable(false);
        }
        else crbCodeTxt.setEditable(true);
    }//GEN-LAST:event_userStatusCBPropertyChange
    
    private void ButtonPress() {
        SaveParamTable a = new SaveParamTable();
        if (flagChanged) {
            Object[] options = {"Да", "Нет", "Отмена"};
            int n = JOptionPane.showOptionDialog(null, 
                    "Изменения произойдут во всех ЦРБ района. Желаете сохранить?", 
                    "Сохранение норм", 
                    JOptionPane.YES_NO_CANCEL_OPTION, 
                    JOptionPane.QUESTION_MESSAGE,
                    null, 
                    options,  
                    options[0]);
            if (n == 0) {
                flagChanged = a.saveToDB(ParamTable, con.getConnection());
            }
            if (n == 1) {
                String text = (String) ServiceTable.getValueAt(ServiceTable.getSelectedRow(), 0);
                ParamTable.remove(this);
                ParamTableShow(text);
                flagChanged = false;
            }
            if (n == 2) {
                flagCancel = true;
            }  
        }
        
    }
    
    public void UserTableShow(){
       CrbTableModel tm = new CrbTableModel(false, con.getConnection());          
        try { 
            tm.setDataSource(user.FillUsersTable(con.getConnection()));           
            UserTable.setModel(tm); 
        } catch (Exception ex) {
        } 
        UserTable.getTableHeader().setFont(new java.awt.Font("Arial", 0, 13));
        UserTable.setFont(new java.awt.Font("Arial", 0, 14));
        UserTable.setRowHeight(22);
        UserTable.getColumnModel().getColumn(0).setHeaderValue("ID");
        UserTable.getColumnModel().getColumn(1).setHeaderValue("Имя пользователя");       
        UserTable.getColumnModel().getColumn(2).setHeaderValue("Права доступа");
        UserTable.getColumnModel().getColumn(3).setHeaderValue("Код ЦРБ");
        UserTable.getColumnModel().getColumn(0).setPreferredWidth(80);
        UserTable.getColumnModel().getColumn(1).setPreferredWidth(200); 
        UserTable.getColumnModel().getColumn(2).setPreferredWidth(120);
         
        for (int i = 0; i < UserTable.getRowCount(); i++) {
            if(UserTable.getValueAt(i,2).toString().contains("1")){
                
                UserTable.setValueAt("Администратор",i,2);
            }
            if(UserTable.getValueAt(i,2).toString().contains("2")){
                
                UserTable.setValueAt("Врач",i,2);
            }
        }
    }
    
    public void getDataFromCodeTable(){
        UpdateDocCodeTable dc = new UpdateDocCodeTable(con.getConnection());
        int length = DocCodeTable.getRowCount();
        String v002 = " ";
        String v015 = " ";
        String servCode;
        for (int i = 0; i < length; i++) {           
                servCode = ServiceListTable.getValueAt(i, 0).toString();
                Object value = DocCodeTable.getValueAt(i,0);
                if (value!=null)
                {
                    v002 = value.toString();
                }
                else{
                    v002= " ";
                 }
                value = DocCodeTable.getValueAt(i,1);
                if (value!=null)
                {
                    v015 = value.toString();
                }
                else{
                    v015= " ";
                 }    
                if(v002.contains(",")){
                    String [] arr002 = v002.split(",");
                    int l = arr002.length;
                    for (int j = 0; j < l; j++) {
                        
                    }
                }
                else{
                    
                }
                if(v015.contains(",")){
                    String [] arr015 = v015.split(",");
                }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuperAdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuperAdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuperAdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuperAdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuperAdminFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminSetPanel;
    private javax.swing.JPanel CrbPanel;
    private javax.swing.JTable CrbTable;
    private javax.swing.JTable DocCodeTable;
    private javax.swing.JPanel DocSetPanel;
    private javax.swing.JPanel FapPanel;
    private javax.swing.JTable FapTable;
    private javax.swing.JButton LoadCrbListExcel;
    private javax.swing.JButton LoadFapListExcel;
    private javax.swing.JPanel LoadPatPanel;
    private javax.swing.JButton LoadPatientListExcel;
    private javax.swing.JPanel ParamPanel;
    private javax.swing.JTable ParamTable;
    private javax.swing.JTable PatientTable;
    private javax.swing.JButton SaveCrbList;
    private javax.swing.JButton SaveDocServParams;
    private javax.swing.JButton SaveFapList;
    private javax.swing.JButton SaveParam1;
    private javax.swing.JButton SavePatientList;
    private javax.swing.JTable ServiceListTable;
    private javax.swing.JTable ServiceTable;
    private javax.swing.JButton ShowAdminP;
    private javax.swing.JButton ShowCrbP;
    private javax.swing.JButton ShowDocSetP;
    private javax.swing.JButton ShowFapP;
    private javax.swing.JButton ShowParam;
    private javax.swing.JButton ShowPatP;
    private javax.swing.JTable UserTable;
    private javax.swing.JButton addAdmin;
    private javax.swing.JTextField crbCodeTxt;
    private javax.swing.JButton delAdmin;
    private javax.swing.JDialog dialog1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JTextField userPassTxt;
    private javax.swing.JComboBox<String> userStatusCB;
    private javax.swing.JTextField usernameTxt;
    // End of variables declaration//GEN-END:variables
}
